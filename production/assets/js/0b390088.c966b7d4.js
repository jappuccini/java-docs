"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([["5950"],{3828:function(e,n,i){i.r(n),i.d(n,{default:()=>c,frontMatter:()=>l,metadata:()=>s,assets:()=>d,toc:()=>o,contentTitle:()=>t});var s=JSON.parse('{"id":"additional-material/steffen/java-2/exam-preparation/2025","title":"2025","description":"","source":"@site/docs/additional-material/steffen/java-2/exam-preparation/2025.md","sourceDirName":"additional-material/steffen/java-2/exam-preparation","slug":"/additional-material/steffen/java-2/exam-preparation/2025","permalink":"/java-docs/production/additional-material/steffen/java-2/exam-preparation/2025","draft":false,"unlisted":false,"editUrl":"https://github.com/jappuccini/java-docs/tree/main/docs/additional-material/steffen/java-2/exam-preparation/2025.md","tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"title":"2025","description":"","sidebar_position":40,"tags":[]},"sidebar":"additionalMaterialSidebar","previous":{"title":"2024","permalink":"/java-docs/production/additional-material/steffen/java-2/exam-preparation/2024"},"next":{"title":"Projektbericht","permalink":"/java-docs/production/additional-material/steffen/java-2/project-report"}}'),r=i("85893"),a=i("50065");let l={title:2025,description:"",sidebar_position:40,tags:[]},t=void 0,d={},o=[{value:"Aufgabe 1 - Optional",id:"aufgabe-1---optional",level:2},{value:"Klassendiagramm",id:"klassendiagramm",level:3},{value:"Hinweise zur Klasse Driver",id:"hinweise-zur-klasse-driver",level:3},{value:"Hinweise zur Klasse Task01",id:"hinweise-zur-klasse-task01",level:3},{value:"L\xf6sung",id:"l\xf6sung",level:3},{value:"Aufgabe 2 - Lambdafunktionen",id:"aufgabe-2---lambdafunktionen",level:2},{value:"Klassendiagramm",id:"klassendiagramm-1",level:3},{value:"Hinweise zur Klasse Task02",id:"hinweise-zur-klasse-task02",level:3},{value:"L\xf6sung",id:"l\xf6sung-1",level:3},{value:"Aufgabe 3 - Streams",id:"aufgabe-3---streams",level:2},{value:"Klassendiagramm",id:"klassendiagramm-2",level:3},{value:"Hinweise zur Klasse Employee",id:"hinweise-zur-klasse-employee",level:3},{value:"Hinweise zur Klasse Customer",id:"hinweise-zur-klasse-customer",level:3},{value:"Hinweise zur Klasse Company",id:"hinweise-zur-klasse-company",level:3},{value:"L\xf6sung",id:"l\xf6sung-2",level:3}];function u(e){let n={code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"aufgabe-1---optional",children:"Aufgabe 1 - Optional"}),"\n",(0,r.jsx)(n.p,{children:"Implementiere die Klassen Driver und Task01."}),"\n",(0,r.jsx)(n.h3,{id:"klassendiagramm",children:"Klassendiagramm"}),"\n",(0,r.jsx)(n.mermaid,{value:"classDiagram\n\n  Car -- Task01\n  Car o-- Driver\n\n  class Car {\n    <<record>>\n    +make: String\n    +model: String\n    +owner: Driver\n  }\n\n  class Driver {\n    +name: String\n    +driverLicence: Optional<String>\n    +Driver(name: String)\n    +Driver(name: String, driverLicence: String)\n    +toString() String\n    +isAllowedToDrive() boolean\n  }\n\n  class Task01 {\n    +main(args: String[])void$\n  }"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public record Car (String make, String model, String owner) {}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"hinweise-zur-klasse-driver",children:"Hinweise zur Klasse Driver"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Die Konstruktoren sollen alle Attribute initialisieren. Verwende die korrekten\nMethoden der Optional Klasse, sodass ein Fehler ausgel\xf6st wird, falls eine\nNull Referenz f\xfcr driverLicence \xfcbergeben wird."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Die Methode ",(0,r.jsx)(n.strong,{children:"toString"})," soll das Objekt als String zur\xfcckgeben. Es sollen nur\ndie Attribute ber\xfccksichtigt werden, welche einen Wert haben. Haben beide\nAttribute einen Wert, sollen die Werte durch ein Leerzeichen getrennt werden.\nEs sollen ausschlie\xdflich die ",(0,r.jsx)(n.strong,{children:"Werte"})," ausgegeben werden."]}),"\n",(0,r.jsx)(n.p,{children:"Beispiel:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Steffen\nSteffen B\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Die Methode ",(0,r.jsx)(n.strong,{children:"isAllowedToDrive"})," soll ermitteln, ob der Fahrer die\nF\xfchrerscheinklasse B hat."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"hinweise-zur-klasse-task01",children:"Hinweise zur Klasse Task01"}),"\n",(0,r.jsxs)(n.p,{children:['Es soll ein Auto der Marke BMW und dem Modell 320i erstellt werden. Der\nEigent\xfcmer des Autos soll den Namen "Steffen" haben, der keinen F\xfchrerschein\nhat. Gib anschlie\xdfend den ',(0,r.jsx)(n.strong,{children:"Eigent\xfcmer"}),' des Autos in der Konsole aus. Lege die\nF\xfchrerscheinklasse des zuvor angelegten Eigent\xfcmers auf "B" fest. Falls der\nFahrer anschlie\xdfend das Auto fahren darf, soll das Auto auf der Konsole\nausgegeben werden.']}),"\n",(0,r.jsx)(n.h3,{id:"l\xf6sung",children:"L\xf6sung"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java"})}),"\n",(0,r.jsx)(n.h2,{id:"aufgabe-2---lambdafunktionen",children:"Aufgabe 2 - Lambdafunktionen"}),"\n",(0,r.jsx)(n.p,{children:"Implementiere die Klassen Game und Task02."}),"\n",(0,r.jsx)(n.h3,{id:"klassendiagramm-1",children:"Klassendiagramm"}),"\n",(0,r.jsx)(n.mermaid,{value:"classDiagram\n  Game -- Task02\n\n  class Usk {\n    <<enum>>\n    0, 6, 12, 16 18;\n\n    getChildUsks()$ List~Usk~\n\n  }\n\n  class Game {\n      <<record>>\n      +name String\n      +usk Usk\n      +price double\n      +isForChilds ?$\n      +makeRemaster ?$\n\n      +isCheaperThan(price: double)$ Predicate~Game~\n      +getGames()$ Stream~Game~\n  }\n\n  class Task02 {\n      +main(args: String[])$ void\n  }"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"import java.util.List;\n\npublic enum Usk {\n    ZERO,\n    SIX,\n    TWELVE,\n    SIXTEEN,\n    EIGHTEEN;\n\n\n    public static List<Usk> getChildUsks() {\n        return List.of(Usk.ZERO, Usk.SIX);\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Im Klassendiagramm sind nicht alle Datentypen angegeben. Verwende f\xfcr alle\nfehlenden Datentypen ein passendes funktionales Interface."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Das Attribut ",(0,r.jsx)(n.strong,{children:"isForChilds"})," soll eine Lambdafunktion enthalten, die\nermittelt, ob die Usk eines Spiels f\xfcr Kinder ist. Die Usk Klasse definiert\nalle Child Usk."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Das Attribut ",(0,r.jsx)(n.strong,{children:"makeRemaster"}),' soll eine Lambdafunktion enthalten, die ein\nbestehendes Spiel in eine Remaster Version umwandelt. Bei der Umwandlung soll\nder Titel "Remastered" als Suffix enthalten und der Preis um 50% erh\xf6ht\nwerden.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Die Methode ",(0,r.jsx)(n.strong,{children:"isCheaperThan"})," soll eine Lambdafunktion zur\xfcckgeben, die\nabh\xe4ngig von den Parametern \xfcberpr\xfcft, ob ein Spiel g\xfcnstiger als der\nParameter ist."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Die Methode ",(0,r.jsx)(n.strong,{children:"getGames"})," soll einen Stream von einem einzelnen Game mit frei\ngew\xe4hlten Werten zur\xfcckgeben."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"hinweise-zur-klasse-task02",children:"Hinweise zur Klasse Task02"}),"\n",(0,r.jsx)(n.p,{children:"Verwende f\xfcr die nachfolgende Abfolge die Methoden der Klasse Game."}),"\n",(0,r.jsx)(n.p,{children:"Erzeuge einen Stream von Spielen und mache Sie zu Remastered Versionen. Verwende\neinen Filter, sodass nur Spiele \xfcbrig bleiben, welche f\xfcr Kinder geeignet sind\nund g\xfcnstiger als 70 sind."}),"\n",(0,r.jsx)(n.h3,{id:"l\xf6sung-1",children:"L\xf6sung"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java"})}),"\n",(0,r.jsx)(n.h2,{id:"aufgabe-3---streams",children:"Aufgabe 3 - Streams"}),"\n",(0,r.jsx)(n.h3,{id:"klassendiagramm-2",children:"Klassendiagramm"}),"\n",(0,r.jsx)(n.mermaid,{value:"classDiagram\n  direction TB\n\n  Company -- Employee\n  Company -- Customer\n\n  class Employee {\n    <<record>>\n    +name: String\n    +salary: double\n    +skills : List~String~\n  }\n\n  class Customer {\n    <<record>>\n    +name: String\n    +yearOfFirstOrder: int\n    +orders: Map~Integer, Double~\n  }\n\n  class Company {\n    <<record>>\n    +customers: List~Customer~\n    +employees: List~Employee~\n\n    +q1() double\n    +q2() void\n    +q3() Map~Integer&sbquo; List~Employee~~\n    +q4(skill: String) Optional~Employee~\n    +q5() List~String~\n  }\n"}),"\n",(0,r.jsx)(n.h3,{id:"hinweise-zur-klasse-employee",children:"Hinweise zur Klasse Employee"}),"\n",(0,r.jsx)(n.p,{children:"Jeder Mitarbeiter kann durch einen Namen, das Jahresgehalt und seine Skills\nbeschrieben werden."}),"\n",(0,r.jsx)(n.h3,{id:"hinweise-zur-klasse-customer",children:"Hinweise zur Klasse Customer"}),"\n",(0,r.jsx)(n.p,{children:"Jeder Kunde kann durch einen Namen, das Jahr der ersten Bestellung und seine\nBestellungen beschrieben werden. Der Schl\xfcssel entspricht der Bestellnummer und\nder Wert der Map der Bestellsumme."}),"\n",(0,r.jsx)(n.h3,{id:"hinweise-zur-klasse-company",children:"Hinweise zur Klasse Company"}),"\n",(0,r.jsx)(n.p,{children:"Das Unternehmen enth\xe4lt Mitarbeiter (employees) und Kunden (customers). Benutze\ndie Java Stream API, um die Anforderungen des CEO's zu erf\xfcllen."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"q1"})," Der CEO m\xf6chte wissen, was f\xfcr ein Durchschnittsgehalt seine Entwickler\nf\xfcr Smartphones haben."]}),"\n",(0,r.jsx)(n.p,{children:'Die Methode soll das Durchschnittsgehalt der Mitarbeiter ermitteln, welche\n"Java", "Kotlin" oder "Swift" als Skill haben.'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"q2"}),' Der CEO ist in Boni Laune und will seinen 3 "besten" "Mitarbeitern"\neine Reise auf die Malediven schenken.']}),"\n",(0,r.jsx)(n.p,{children:"Die Methode soll die drei Sales-Mitarbeiter ermitteln, welche am besten\nVerdienen und einen pers\xf6nlichn Gru\xdf auf der Konsole ausgeben:"}),"\n",(0,r.jsx)(n.p,{children:"Beispiel:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Ein kleines Danke Mirco! Viel Spa\xdf in der Sonne.\n"})}),"\n",(0,r.jsx)(n.p,{children:'Ein Mitarbeiter gilt als Sales-Mitarbeiter, sofern er den Skill "Sales" hat.'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"q3"}),' Der CEO leidet unter Kontrollwahn. Er will wissen wie viele Mitarbeiter\n"KI" nicht kennen und nach Alter gruppieren. Er glaubt, dass Boomer KI nicht\nnutzen.']}),"\n",(0,r.jsx)(n.p,{children:'Die Methode soll ermittlen, wieviele Mitarbeiter den Skill "KI" nicht haben\nund diese nach Alter gruppieren.'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"q4"})," Der CEO ist in K\xfcndigungslaune und m\xf6chte Experten herausfinden, welche\ndurch KI ersetzt werden k\xf6nnen. Abh\xe4nging vom Parameter skill soll der\nMitarbeiter mit der teuersten Salary/Skill Ratio gefunden werden."]}),"\n",(0,r.jsxs)(n.p,{children:["Die Methode soll einen Mitarbeiter zur\xfcckgeben. Zuerst sollen jene\n",(0,r.jsx)(n.strong,{children:"Mitarbeiter"})," ermittelt werden, die den Parameter skill haben. Anschlie\xdfend\nsoll der teuerste Mitarbeiter ermittelt werden. Der Wert des Mitarbeiters wird\nwie folgt berechnet: Jahresgehalt / Anzahl an Skills."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"q5"})," Der CEO will kurzfristig die Dividende erh\xf6hen und will sein\nUnternehmen in ein Premiumunternehmen umwandeln. Alle Kunden, die eine\nBestellung mit einer geringen Summe haben sollen gesperrt werden."]}),"\n",(0,r.jsx)(n.p,{children:"Die Methode soll alle Kunden ermitteln, welche eine Bestellung haben deren\nBestellsumme geringer als 100 ist und deren Namen in Gro\xdfbuchstaben\nzur\xfcckgeben. Die Liste soll keine doppelten Werte enthalten."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"l\xf6sung-2",children:"L\xf6sung"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java"})})]})}function c(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return t},a:function(){return l}});var s=i(67294);let r={},a=s.createContext(r);function l(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);