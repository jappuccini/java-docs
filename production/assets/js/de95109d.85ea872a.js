"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([["5225"],{1137:function(e,n,a){a.r(n),a.d(n,{frontMatter:()=>t,toc:()=>u,default:()=>h,metadata:()=>s,assets:()=>c,contentTitle:()=>o});var s=JSON.parse('{"id":"exercises/polymorphy/polymorphy04","title":"Polymorphism04","description":"","source":"@site/docs/exercises/polymorphy/polymorphy04.mdx","sourceDirName":"exercises/polymorphy","slug":"/exercises/polymorphy/polymorphy04","permalink":"/java-docs/production/exercises/polymorphy/polymorphy04","draft":false,"unlisted":false,"editUrl":"https://github.com/jappuccini/java-docs/tree/main/docs/exercises/polymorphy/polymorphy04.mdx","tags":[],"version":"current","frontMatter":{"title":"Polymorphism04","description":""},"sidebar":"exercisesSidebar","previous":{"title":"Polymorphism03","permalink":"/java-docs/production/exercises/polymorphy/polymorphy03"},"next":{"title":"Abstrakte und finale Klassen und Methoden","permalink":"/java-docs/production/exercises/abstract-and-final/"}}'),i=a(74848),r=a(84429),l=a(69714);let t={title:"Polymorphism04",description:""},o,c={},u=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweis zur Klasse <em>HighValueDice</em>",id:"hinweis-zur-klasse-highvaluedice",level:2},{value:"Hinweis zur Klasse <em>LowValueDice</em>",id:"hinweis-zur-klasse-lowvaluedice",level:2},{value:"Konsolenausgabe",id:"konsolenausgabe",level:2}];function d(e){let n={a:"a",code:"code",em:"em",h2:"h2",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Passe die Klasse ",(0,i.jsx)(n.code,{children:"Dice"})," aus \xdcbungsaufgabe\n",(0,i.jsx)(n.a,{href:"../class-diagrams/class-diagrams02",children:"ClassDiagrams02"})," anhand des abgebildeten\nKlassendiagramms an und erstelle die Klassen ",(0,i.jsx)(n.code,{children:"HighValueDice"})," und\n",(0,i.jsx)(n.code,{children:"LowValueDice"})]}),"\n",(0,i.jsxs)(n.li,{children:["Passe die Klasse ",(0,i.jsx)(n.code,{children:"Player"})," aus \xdcbungsaufgabe\n",(0,i.jsx)(n.a,{href:"../class-diagrams/class-diagrams02",children:"ClassDiagrams02"})," anhand des abgebildeten\nKlassendiagramms an"]}),"\n",(0,i.jsxs)(n.li,{children:["Passe die Methode ",(0,i.jsx)(n.code,{children:"boolean move(player: Player)"})," der Klasse ",(0,i.jsx)(n.code,{children:"DiceGame"})," aus\n\xdcbungsaufgabe ",(0,i.jsx)(n.a,{href:"../class-diagrams/class-diagrams02",children:"ClassDiagrams02"})," so an,\ndass jeder Spieler w\xe4hrend des Spiels einmal die M\xf6glichkeit hat, entweder nur\nmit 4-5-6-W\xfcrfeln oder 1-2-3-W\xfcrfeln zu w\xfcrfeln"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"klassendiagramm",children:"Klassendiagramm"}),"\n",(0,i.jsx)(n.mermaid,{value:"classDiagram\n    DiceGame o-- Dice\n    DiceGame o-- Player\n    DiceCup --o DiceGame\n    Dice <|-- LowValueDice : extends\n    Dice <|-- HighValueDice : extends\n\n    class Player {\n        -name: String\n        -score: int\n        -isActive: boolean\n        -specialAvailable: boolean\n        +Player(name: String)\n        +getName() String\n        +getScore() int\n        +setScore(int: score) void\n        +isActive() boolean\n        +setActive(isActive: boolean) void\n        +getSpecialAvailable() boolean\n        +setSpecialAvailable(specialAvailable: boolean) void\n    }\n\n    class Dice {\n        -id: int\n        #value: int\n        +Dice(id int)\n        +getId() int\n        +getValue() int\n        +rollTheDice() void\n    }\n\n    class LowValueDice {\n        +LowValueDice(id: int)\n        +rollTheDice() void\n    }\n\n    class HighValueDice {\n        +HighValueDice(id: int)\n        +rollTheDice() void\n    }\n\n    class DiceCup {\n        +rollTheDices(dices: ArrayList~Dice~) void\n        +rollTheDices(dices: Dice[]) void\n    }\n\n    class DiceGame {\n        -diceCup: DiceCup\n        -dices: ArrayList~Dice~\n        -players: ArrayList~Player~\n        -scanner: Scanner\n        -numberOfActivePlayers: int\n        +DiceGame(players: ArrayList~Player~)\n        +start() void\n        -move(player: Player) void\n    }"}),"\n",(0,i.jsxs)(n.h2,{id:"hinweis-zur-klasse-highvaluedice",children:["Hinweis zur Klasse ",(0,i.jsx)(n.em,{children:"HighValueDice"})]}),"\n",(0,i.jsxs)(n.p,{children:["Die Methode ",(0,i.jsx)(n.code,{children:"void rollTheDice()"}),' soll nur 4er, 5er und 6er "w\xfcrfeln".']}),"\n",(0,i.jsxs)(n.h2,{id:"hinweis-zur-klasse-lowvaluedice",children:["Hinweis zur Klasse ",(0,i.jsx)(n.em,{children:"LowValueDice"})]}),"\n",(0,i.jsxs)(n.p,{children:["Die Methode ",(0,i.jsx)(n.code,{children:"void rollTheDice()"}),' soll nur 1er, 2er und 3er "w\xfcrfeln".']}),"\n",(0,i.jsx)(n.h2,{id:"konsolenausgabe",children:"Konsolenausgabe"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-console",children:"Hans hat aktuell 0 Punkte\nHans, m\xf6chtest Du einmalig Spezialw\xfcrfel verwenden (true, false)?: true\nHans, welche Spezialw\xfcrfel m\xf6chtest Du verwenden (1=4-5-6-W\xfcrfel, 2=1-2-3-W\xfcrfel)?: 1\nHans, m\xf6chtest Du w\xfcrfeln (true, false)?: true\nHans hat 12 Punkte\nHans hat insgesamt 12 Punkte\n\u2026\nLisa hat aktuell 46 Punkte\nLisa, m\xf6chtest Du w\xfcrfeln (true, false)?: true\nLisa hat 12 Punkte\nLisa hat insgesamt 58 Punkte\nLisa hat verloren\nDer Sieger hei\xdft Hans und hat 49 Punkte\n"})}),"\n",(0,i.jsx)(l.A,{pullRequest:"44",branchSuffix:"polymorphy/04"})]})}function h(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},93703:function(e,n,a){a.d(n,{A:()=>r});var s=a(74848);a(96540);var i=a(39836);function r({children:e,hidden:n,className:a}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.A)("tabItem_Ymn6",a),hidden:n,children:e})}},84109:function(e,n,a){a.d(n,{A:()=>x});var s=a(74848),i=a(96540),r=a(39836),l=a(16364),t=a(68251),o=a(56347),c=a(28004),u=a(25580),d=a(12213),h=a(75734);function p(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function m({value:e,tabValues:n}){return n.some(n=>n.value===e)}var v=a(98864);function f({className:e,block:n,selectedValue:a,selectValue:i,tabValues:l}){let o=[],{blockElementScrollPositionUntilNextRender:c}=(0,t.a_)(),u=e=>{let n=e.currentTarget,s=l[o.indexOf(n)].value;s!==a&&(c(n),i(s))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let a=o.indexOf(e.currentTarget)+1;n=o[a]??o[0];break}case"ArrowLeft":{let a=o.indexOf(e.currentTarget)-1;n=o[a]??o[o.length-1]}}n?.focus()};return(0,s.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:l.map(({value:e,label:n,attributes:i})=>(0,s.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:u,...i,className:(0,r.A)("tabs__item","tabItem_LNqP",i?.className,{"tabs__item--active":a===e}),children:n??e},e))})}function g({lazy:e,children:n,selectedValue:a}){let l=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=l.find(e=>e.props.value===a);return e?(0,i.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,s.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==a}))})}function b(e){let n=function(e){let n,{defaultValue:a,queryString:s=!1,groupId:r}=e,l=function(e){let{values:n,children:a}=e;return(0,i.useMemo)(()=>{let e=n??p(a).map(({props:{value:e,label:n,attributes:a,default:s}})=>({value:e,label:n,attributes:a,default:s})),s=(0,d.XI)(e,(e,n)=>e.value===n.value);if(s.length>0)throw Error(`Docusaurus error: Duplicate values "${s.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,a])}(e),[t,v]=(0,i.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let a=n.find(e=>e.default)??n[0];if(!a)throw Error("Unexpected error: 0 tabValues");return a.value})({defaultValue:a,tabValues:l})),[f,g]=function({queryString:e=!1,groupId:n}){let a=(0,o.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,u.aZ)(s),(0,i.useCallback)(e=>{if(!s)return;let n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})},[s,a])]}({queryString:s,groupId:r}),[b,x]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[a,s]=(0,h.Dv)(n);return[a,(0,i.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:r}),j=m({value:n=f??b,tabValues:l})?n:null;return(0,c.A)(()=>{j&&v(j)},[j]),{selectedValue:t,selectValue:(0,i.useCallback)(e=>{if(!m({value:e,tabValues:l}))throw Error(`Can't select invalid tab value=${e}`);v(e),g(e),x(e)},[g,x,l]),tabValues:l}}(e);return(0,s.jsxs)("div",{className:(0,r.A)(l.G.tabs.container,"tabs-container","tabList__CuJ"),children:[(0,s.jsx)(f,{...n,...e}),(0,s.jsx)(g,{...n,...e})]})}function x(e){let n=(0,v.A)();return(0,s.jsx)(b,{...e,children:p(e.children)},String(n))}},69714:function(e,n,a){a.d(n,{A:()=>o});var s=a(74848);a(96540);var i=a(84109),r=a(93703),l=a(12801),t=a(60464);function o({pullRequest:e,branchSuffix:n}){return(0,s.jsxs)(i.A,{children:[(0,s.jsxs)(r.A,{value:"exercise",label:"Exercise",default:!0,children:[(0,s.jsx)(t.A,{language:"console",children:`git switch exercises/${n}`}),(0,s.jsx)(l.A,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/exercises/${n}/Exercise.java`,children:(0,s.jsx)("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"})})]}),(0,s.jsxs)(r.A,{value:"solution",label:"Solution",children:[(0,s.jsx)(t.A,{language:"console",children:`git switch solutions/${n}`}),(0,s.jsx)(l.A,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/solutions/${n}/Exercise.java`,children:(0,s.jsx)("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"})})]}),(0,s.jsxs)(r.A,{value:"pullrequest",label:"Pull Request",children:["Alle \xa0\xc4nderungen zwischen der Aufgabe und der L\xf6sung findest du im Pull Request"," ",(0,s.jsxs)(l.A,{to:`https://github.com/jappuccini/java-exercises/pull/${e}/files?diff=split`,children:["PR#",e]})]})]})}}}]);