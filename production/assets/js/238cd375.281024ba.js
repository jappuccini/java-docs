"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([["899"],{24089:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>o,toc:()=>d,default:()=>h,metadata:()=>r,assets:()=>u,contentTitle:()=>c});var r=JSON.parse('{"id":"documentation/java-collections-framework","title":"Java Collections Framework","description":"","source":"@site/docs/documentation/java-collections-framework.mdx","sourceDirName":"documentation","slug":"/documentation/java-collections-framework","permalink":"/java-docs/production/documentation/java-collections-framework","draft":false,"unlisted":false,"editUrl":"https://github.com/jappuccini/java-docs/tree/main/docs/documentation/java-collections-framework.mdx","tags":[{"inline":true,"label":"collections","permalink":"/java-docs/production/tags/collections"},{"inline":true,"label":"lists","permalink":"/java-docs/production/tags/lists"},{"inline":true,"label":"sets","permalink":"/java-docs/production/tags/sets"},{"inline":true,"label":"queues","permalink":"/java-docs/production/tags/queues"}],"version":"current","sidebarPosition":224,"frontMatter":{"title":"Java Collections Framework","description":"","sidebar_position":224,"tags":["collections","lists","sets","queues"]},"sidebar":"documentationSidebar","previous":{"title":"Komparatoren","permalink":"/java-docs/production/documentation/comparators"},"next":{"title":"Schl\xfcsseltransformationen (Hashing)","permalink":"/java-docs/production/documentation/hashing"}}'),a=t(74848),i=t(84429),s=t(84109),l=t(93703);let o={title:"Java Collections Framework",description:"",sidebar_position:224,tags:["collections","lists","sets","queues"]},c,u={},d=[{value:"Iteratoren",id:"iteratoren",level:2}];function m(e){let n={a:"a",code:"code",h2:"h2",mermaid:"mermaid",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Collections sind Beh\xe4lter, die beliebig viele Objekte aufnehmen k\xf6nnen. Der\nBeh\xe4lter \xfcbernimmt dabei die Verantwortung f\xfcr die Elemente. Collections werden\nauch als (Daten-)Sammlungen bezeichnet. Alle Collections-Schnittstellen und\nKlassen befinden sich im Paket ",(0,a.jsx)(n.code,{children:"java.util"}),". Die Grundformen der Datensammlungen\nsind die Schnittstellen ",(0,a.jsx)(n.code,{children:"List<E>"}),", ",(0,a.jsx)(n.code,{children:"Set<E>"})," und ",(0,a.jsx)(n.code,{children:"Queue<E>"}),". Zu allen\nSchnittstellen existieren konkrete Implementierungen sowie abstrakte Klassen,\ndie zum Erstellen eigener Collections-Klassen verwendet werden k\xf6nnen."]}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsxs)(l.A,{value:"a",label:"Listen (Lists)",default:!0,children:[(0,a.jsx)(n.p,{children:"Unter einer Liste (List) versteht man eine geordnete Folge von Objekten. Listen\nk\xf6nnen doppelte Elemente enthalten. Der Zugriff auf die Elemente erfolgt \xfcber\nden Index oder sequentiell."}),(0,a.jsx)(n.mermaid,{value:"flowchart\n   subgraph names\n      name1(Lisa)\n      name2(Peter)\n      name3(Lisa)\n      name4(Hans)\n   end"}),(0,a.jsxs)(n.p,{children:["Konkrete Implementierungen der Schnittstelle ",(0,a.jsx)(n.code,{children:"List<E>"})," stellen die Klassen\n",(0,a.jsx)(n.code,{children:"ArrayList<E>"})," und ",(0,a.jsx)(n.code,{children:"LinkedList<E>"})," (siehe auch\n",(0,a.jsx)(n.a,{href:"array-lists",children:"Feldbasierte Listen"})," und ",(0,a.jsx)(n.a,{href:"lists",children:"Listen"}),") dar."]})]}),(0,a.jsxs)(l.A,{value:"b",label:"Mengen (Sets)",children:[(0,a.jsx)(n.p,{children:"Unter einer Menge (Set) versteht man eine Ansammlung von Elementen. Mengen\nk\xf6nnen keine doppelten Elemente beinhalten. Der Zugriff erfolgt \xfcber typische\nMengenoperationen."}),(0,a.jsx)(n.mermaid,{value:"flowchart LR\n   subgraph names\n      name1(Lisa)\n      name2(Peter)\n      name3(Hans)\n   end"}),(0,a.jsxs)(n.p,{children:["Konkrete Implementierungen der Schnittstelle ",(0,a.jsx)(n.code,{children:"Set<E>"})," stellen die Klassen\n",(0,a.jsx)(n.code,{children:"HashSet<E>"})," und ",(0,a.jsx)(n.code,{children:"TreeSet<E>"})," dar. Die Klasse ",(0,a.jsx)(n.code,{children:"HashSet<E>"})," implementiert die\nMenge dabei in Form einer Hashtabelle, die Klasse ",(0,a.jsx)(n.code,{children:"TreeSet<E>"})," in Form eines\nBin\xe4rbaumes."]})]}),(0,a.jsxs)(l.A,{value:"c",label:"Warteschlangen (Queues)",children:[(0,a.jsx)(n.p,{children:"Unter einer Warteschlange (Queue) versteht man eine Folge von Objekten, bei der\ndas Anf\xfcgen und L\xf6schen von Objekten nach dem FIFO-Prinzip (First In First Out)\nfunktioniert. Bei einer Warteschlange kann ein neues Objekt immer nur am Ende\nangef\xfcgt werden und nur das Objekt, das am Anfang der Warteschlange steht,\ngel\xf6scht werden. Warteschlangen k\xf6nnen doppelte Elemente enthalten."}),(0,a.jsx)(n.mermaid,{value:"flowchart LR\n   name1 --\x3e name2 --\x3e name3 --\x3e name4 --\x3e name5\n   name1(Lisa)\n   subgraph names\n      direction LR\n      name2(Peter)\n      name3(Lisa)\n      name4(Hans)\n   end\n   name5(Max)"}),(0,a.jsxs)(n.p,{children:["Konkrete Implementierungen der Schnittstelle ",(0,a.jsx)(n.code,{children:"Queue<E>"})," stellen die Klassen\n",(0,a.jsx)(n.code,{children:"PriorityQueue<E>"})," und ",(0,a.jsx)(n.code,{children:"LinkedList<E>"})," dar. Die Klasse ",(0,a.jsx)(n.code,{children:"PriorityQueue<E>"}),"\nimplementiert die Warteschlange als eine Vorrang-Warteschlange. Bei einer\nVorrang-Warteschlange werden die Elemente gem\xe4\xdf ihrer Wichtigkeit sortiert, das\nhei\xdft, sie funktioniert nicht nach dem FIFO-Prinzip."]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"iteratoren",children:"Iteratoren"}),"\n",(0,a.jsxs)(n.p,{children:["Ein Iterator erlaubt den sequentiellen Zugriff auf die Elemente einer\nDatensammlung. Iteratoren werden durch die Schnittstelle ",(0,a.jsx)(n.code,{children:"Iterator<E>"}),"\ndefiniert; diese bietet die Methoden ",(0,a.jsx)(n.code,{children:"boolean hasNext()"}),", ",(0,a.jsx)(n.code,{children:"E next()"})," und\n",(0,a.jsx)(n.code,{children:"void remove()"}),". Die von ",(0,a.jsx)(n.code,{children:"Iterator<E>"})," abgeleitete Schnittstelle\n",(0,a.jsx)(n.code,{children:"ListIterator<E>"})," bietet zus\xe4tzliche Methoden zum Ver\xe4ndern einer Liste."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",metastring:'title="MainClass.java" showLineNumbers',children:'public class MainClass {\n\n   public static void main(String[] args) {\n\n      List<String> names = List.of("Hans", "Peter", "Lisa");\n\n      Iterator<String> iterator = names.iterator();\n      while (iterator.hasNext()) {\n         String name = iterator.next();\n         System.out.println(name);\n      }\n\n   }\n\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Auch die bereits bekannte for-each-Schleife basiert auf Iteratoren. Die\nausf\xfchrliche Schreibeweise mit Iteratoren wird auch als erweiterte for-Schleife\nbezeichnet. Beim Kompilieren werden for-each-Schleifen um Iteratoren erg\xe4nzt."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",metastring:'title="MainClass.java" showLineNumbers',children:'public class MainClass {\n\n   public static void main(String[] args) {\n\n      List<String> names = List.of("Hans", "Peter", "Lisa");\n\n      for (Iterator<String> iterator = names.iterator(); iterator.hasNext();) {\n         String name = iterator.next();\n         System.out.println(name);\n      }\n\n      /* Kurzschreibweise */\n      for (String name : names) {\n         System.out.println(name);\n      }\n\n   }\n\n}\n'})})]})}function h(e={}){let{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},93703:function(e,n,t){t.d(n,{A:()=>i});var r=t(74848);t(96540);var a=t(39836);function i({children:e,hidden:n,className:t}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)("tabItem_Ymn6",t),hidden:n,children:e})}},84109:function(e,n,t){t.d(n,{A:()=>j});var r=t(74848),a=t(96540),i=t(39836),s=t(16364),l=t(68251),o=t(56347),c=t(28004),u=t(25580),d=t(12213),m=t(75734);function h(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}var f=t(98864);function b({className:e,block:n,selectedValue:t,selectValue:a,tabValues:s}){let o=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),u=e=>{let n=e.currentTarget,r=s[o.indexOf(n)].value;r!==t&&(c(n),a(r))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{let t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1]}}n?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:s.map(({value:e,label:n,attributes:a})=>(0,r.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:u,...a,className:(0,i.A)("tabs__item","tabItem_LNqP",a?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function g({lazy:e,children:n,selectedValue:t}){let s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=s.find(e=>e.props.value===t);return e?(0,a.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function v(e){let n=function(e){let n,{defaultValue:t,queryString:r=!1,groupId:i}=e,s=function(e){let{values:n,children:t}=e;return(0,a.useMemo)(()=>{let e=n??h(t).map(({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r})),r=(0,d.XI)(e,(e,n)=>e.value===n.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,t])}(e),[l,f]=(0,a.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let t=n.find(e=>e.default)??n[0];if(!t)throw Error("Unexpected error: 0 tabValues");return t.value})({defaultValue:t,tabValues:s})),[b,g]=function({queryString:e=!1,groupId:n}){let t=(0,o.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,u.aZ)(r),(0,a.useCallback)(e=>{if(!r)return;let n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})},[r,t])]}({queryString:r,groupId:i}),[v,j]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[t,r]=(0,m.Dv)(n);return[t,(0,a.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:i}),x=p({value:n=b??v,tabValues:s})?n:null;return(0,c.A)(()=>{x&&f(x)},[x]),{selectedValue:l,selectValue:(0,a.useCallback)(e=>{if(!p({value:e,tabValues:s}))throw Error(`Can't select invalid tab value=${e}`);f(e),g(e),j(e)},[g,j,s]),tabValues:s}}(e);return(0,r.jsxs)("div",{className:(0,i.A)(s.G.tabs.container,"tabs-container","tabList__CuJ"),children:[(0,r.jsx)(b,{...n,...e}),(0,r.jsx)(g,{...n,...e})]})}function j(e){let n=(0,f.A)();return(0,r.jsx)(v,{...e,children:h(e.children)},String(n))}},84429:function(e,n,t){t.d(n,{R:()=>s,x:()=>l});var r=t(96540);let a={},i=r.createContext(a);function s(e){let n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);