"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([["9301"],{44361:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>t,toc:()=>d,default:()=>m,metadata:()=>r,assets:()=>c,contentTitle:()=>o});var r=JSON.parse('{"id":"exercises/class-diagrams/class-diagrams04","title":"ClassDiagrams04","description":"","source":"@site/docs/exercises/class-diagrams/class-diagrams04.mdx","sourceDirName":"exercises/class-diagrams","slug":"/exercises/class-diagrams/class-diagrams04","permalink":"/java-docs/production/exercises/class-diagrams/class-diagrams04","draft":false,"unlisted":false,"editUrl":"https://github.com/jappuccini/java-docs/tree/main/docs/exercises/class-diagrams/class-diagrams04.mdx","tags":[],"version":"current","frontMatter":{"title":"ClassDiagrams04","description":""},"sidebar":"exercisesSidebar","previous":{"title":"ClassDiagrams03","permalink":"/java-docs/production/exercises/class-diagrams/class-diagrams03"},"next":{"title":"ClassDiagrams05","permalink":"/java-docs/production/exercises/class-diagrams/class-diagrams05"}}'),i=s(74848),a=s(84429),l=s(69714);let t={title:"ClassDiagrams04",description:""},o,c={},d=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweis zur Klasse <em>Person</em>",id:"hinweis-zur-klasse-person",level:2},{value:"Hinweise zur Klasse <em>Employee</em>",id:"hinweise-zur-klasse-employee",level:2},{value:"Hinweise zur Klasse <em>Company</em>",id:"hinweise-zur-klasse-company",level:2},{value:"Konsolenausgabe",id:"konsolenausgabe",level:2}];function u(e){let n={code:"code",em:"em",h2:"h2",li:"li",mermaid:"mermaid",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Erstelle die Klassen ",(0,i.jsx)(n.code,{children:"Company"}),", ",(0,i.jsx)(n.code,{children:"Employee"})," und ",(0,i.jsx)(n.code,{children:"Person"})," anhand des\nabgebildeten Klassendiagramms"]}),"\n",(0,i.jsx)(n.li,{children:"Erstelle eine ausf\xfchrbare Klasse, welche ein Unternehmen mit mehreren\nMitarbeitern erzeugt und auf der Konsole ausgibt"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"klassendiagramm",children:"Klassendiagramm"}),"\n",(0,i.jsx)(n.mermaid,{value:"classDiagram\n    Company o-- Employee\n    Employee o-- Person\n\n    class Company {\n        -name: String #123;final#125;\n        -employees: ArrayList~Employee~ #123;final#125;\n        -numberOfEmployees: int\n        +Company(name: String)\n        +getName() String\n        +getEmployees() ArrayList~Employee~\n        +getNumberOfEmployees() int\n        +addEmployee(employee: Employee) void\n        +toString() String\n    }\n\n    class Person {\n        -name: String #123;final#125;\n        +Person(name: String)\n        +getName() String\n    }\n\n    class Employee {\n        -employeeId: int #123;final#125;\n        -person: Person #123;final#125;\n        -salaryInEuro: int\n        +Employee(employeeId: int, person: Person, salaryInEuro: int)\n        +getEmployeeId() int\n        +getName() String\n        +setSalaryInEuro(salaryInEuro: int) void\n        +getSalaryInEuro() int\n        +toString() String\n    }"}),"\n",(0,i.jsxs)(n.h2,{id:"hinweis-zur-klasse-person",children:["Hinweis zur Klasse ",(0,i.jsx)(n.em,{children:"Person"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Der Konstruktor soll alle Attribute initialisieren"}),"\n",(0,i.jsxs)(n.li,{children:["Die Methode ",(0,i.jsx)(n.code,{children:"String getName()"})," soll den Namen der Person zur\xfcckgeben"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"hinweise-zur-klasse-employee",children:["Hinweise zur Klasse ",(0,i.jsx)(n.em,{children:"Employee"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Der Konstruktor soll alle Attribute initialisieren"}),"\n",(0,i.jsxs)(n.li,{children:["Die Methode ",(0,i.jsx)(n.code,{children:"int getEmployeeId()"})," soll die Id des Mitarbeiters zur\xfcckgeben"]}),"\n",(0,i.jsx)(n.li,{children:"Die Methode String getName()` soll den Namen des Mitarbeiters zur\xfcckgeben"}),"\n",(0,i.jsxs)(n.li,{children:["Die Methode ",(0,i.jsx)(n.code,{children:"void setSalaryInEuro(salaryInEuro: int)"})," soll das Gehalt des\nMitarbeiters festlegen"]}),"\n",(0,i.jsxs)(n.li,{children:["Die Methode ",(0,i.jsx)(n.code,{children:"int getSalaryInEuro()"})," soll das Gehalt des Mitarbeiters\nzur\xfcckgeben"]}),"\n",(0,i.jsxs)(n.li,{children:["Die Methode ",(0,i.jsx)(n.code,{children:"String toString()"})," soll alle Attribute in der Form\n",(0,i.jsx)(n.em,{children:"Mitarbeiternummer - Name - Gehalt"})," zur\xfcckgeben"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"hinweise-zur-klasse-company",children:["Hinweise zur Klasse ",(0,i.jsx)(n.em,{children:"Company"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Der Konstruktor soll alle Attribute initialisieren"}),"\n",(0,i.jsxs)(n.li,{children:["Die Methode ",(0,i.jsx)(n.code,{children:"String getName()"})," soll den Namen der Firma zur\xfcckgeben"]}),"\n",(0,i.jsxs)(n.li,{children:["Die Methode ",(0,i.jsx)(n.code,{children:"ArrayList<Employee> getEmployees()"})," soll die Mitarbeiterliste\nzur\xfcckgeben"]}),"\n",(0,i.jsxs)(n.li,{children:["Die Methode ",(0,i.jsx)(n.code,{children:"int getNumberOfEmployees()"})," soll die Anzahl der Mitarbeiter\nzur\xfcckgeben"]}),"\n",(0,i.jsxs)(n.li,{children:["Die Methode ",(0,i.jsx)(n.code,{children:"void addEmployee(employee: Employee)"})," soll den eingehenden\nMitarbeiter der Mitarbeiterliste hinzuf\xfcgen"]}),"\n",(0,i.jsxs)(n.li,{children:["Die Methode ",(0,i.jsx)(n.code,{children:"String toString()"})," soll alle Attribute in der Form ",(0,i.jsx)(n.em,{children:"Firmenname\n(Mitarbeiteranzahl)\\nMitarbeiter\\n..."})," zur\xfcckgeben"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"konsolenausgabe",children:"Konsolenausgabe"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-console",children:"Maier GmbH (5 Mitarbeiter)\n1 - Max Schmid - 50000\u20AC\n2 - Hans M\xfcller - 75000\u20AC\n3 - Lisa Meier - 40000\u20AC\n4 - Peter Schneider - 55000\u20AC\n5 - Miriam Albers - 90000\u20AC\n"})}),"\n",(0,i.jsx)(l.A,{pullRequest:"39",branchSuffix:"class-diagrams/04"})]})}function m(e={}){let{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},93703:function(e,n,s){s.d(n,{A:()=>a});var r=s(74848);s(96540);var i=s(39836);function a({children:e,hidden:n,className:s}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)("tabItem_Ymn6",s),hidden:n,children:e})}},84109:function(e,n,s){s.d(n,{A:()=>f});var r=s(74848),i=s(96540),a=s(39836),l=s(16364),t=s(68251),o=s(56347),c=s(28004),d=s(25580),u=s(12213),m=s(75734);function h(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}var g=s(98864);function x({className:e,block:n,selectedValue:s,selectValue:i,tabValues:l}){let o=[],{blockElementScrollPositionUntilNextRender:c}=(0,t.a_)(),d=e=>{let n=e.currentTarget,r=l[o.indexOf(n)].value;r!==s&&(c(n),i(r))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{let s=o.indexOf(e.currentTarget)+1;n=o[s]??o[0];break}case"ArrowLeft":{let s=o.indexOf(e.currentTarget)-1;n=o[s]??o[o.length-1]}}n?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},e),children:l.map(({value:e,label:n,attributes:i})=>(0,r.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:e=>{o.push(e)},onKeyDown:u,onClick:d,...i,className:(0,a.A)("tabs__item","tabItem_LNqP",i?.className,{"tabs__item--active":s===e}),children:n??e},e))})}function b({lazy:e,children:n,selectedValue:s}){let l=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=l.find(e=>e.props.value===s);return e?(0,i.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==s}))})}function j(e){let n=function(e){let n,{defaultValue:s,queryString:r=!1,groupId:a}=e,l=function(e){let{values:n,children:s}=e;return(0,i.useMemo)(()=>{let e=n??h(s).map(({props:{value:e,label:n,attributes:s,default:r}})=>({value:e,label:n,attributes:s,default:r})),r=(0,u.XI)(e,(e,n)=>e.value===n.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,s])}(e),[t,g]=(0,i.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let s=n.find(e=>e.default)??n[0];if(!s)throw Error("Unexpected error: 0 tabValues");return s.value})({defaultValue:s,tabValues:l})),[x,b]=function({queryString:e=!1,groupId:n}){let s=(0,o.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,d.aZ)(r),(0,i.useCallback)(e=>{if(!r)return;let n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})},[r,s])]}({queryString:r,groupId:a}),[j,f]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[s,r]=(0,m.Dv)(n);return[s,(0,i.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:a}),v=p({value:n=x??j,tabValues:l})?n:null;return(0,c.A)(()=>{v&&g(v)},[v]),{selectedValue:t,selectValue:(0,i.useCallback)(e=>{if(!p({value:e,tabValues:l}))throw Error(`Can't select invalid tab value=${e}`);g(e),b(e),f(e)},[b,f,l]),tabValues:l}}(e);return(0,r.jsxs)("div",{className:(0,a.A)(l.G.tabs.container,"tabs-container","tabList__CuJ"),children:[(0,r.jsx)(x,{...n,...e}),(0,r.jsx)(b,{...n,...e})]})}function f(e){let n=(0,g.A)();return(0,r.jsx)(j,{...e,children:h(e.children)},String(n))}},69714:function(e,n,s){s.d(n,{A:()=>o});var r=s(74848);s(96540);var i=s(84109),a=s(93703),l=s(12801),t=s(60464);function o({pullRequest:e,branchSuffix:n}){return(0,r.jsxs)(i.A,{children:[(0,r.jsxs)(a.A,{value:"exercise",label:"Exercise",default:!0,children:[(0,r.jsx)(t.A,{language:"console",children:`git switch exercises/${n}`}),(0,r.jsx)(l.A,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/exercises/${n}/Exercise.java`,children:(0,r.jsx)("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"})})]}),(0,r.jsxs)(a.A,{value:"solution",label:"Solution",children:[(0,r.jsx)(t.A,{language:"console",children:`git switch solutions/${n}`}),(0,r.jsx)(l.A,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/solutions/${n}/Exercise.java`,children:(0,r.jsx)("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"})})]}),(0,r.jsxs)(a.A,{value:"pullrequest",label:"Pull Request",children:["Alle \xa0\xc4nderungen zwischen der Aufgabe und der L\xf6sung findest du im Pull Request"," ",(0,r.jsxs)(l.A,{to:`https://github.com/jappuccini/java-exercises/pull/${e}/files?diff=split`,children:["PR#",e]})]})]})}}}]);