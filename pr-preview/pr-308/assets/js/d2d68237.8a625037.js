"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([["8737"],{20432:function(e,n,s){s.r(n),s.d(n,{default:()=>m,frontMatter:()=>l,metadata:()=>i,assets:()=>c,toc:()=>t,contentTitle:()=>d});var i=JSON.parse('{"id":"exam-exercises/exam-exercises-java1/class-diagrams/shape","title":"Geometrische Form","description":"","source":"@site/docs/exam-exercises/exam-exercises-java1/class-diagrams/shape.md","sourceDirName":"exam-exercises/exam-exercises-java1/class-diagrams","slug":"/exam-exercises/exam-exercises-java1/class-diagrams/shape","permalink":"/java-docs/pr-preview/pr-308/exam-exercises/exam-exercises-java1/class-diagrams/shape","draft":false,"unlisted":false,"editUrl":"https://github.com/jappuccini/java-docs/tree/main/docs/exam-exercises/exam-exercises-java1/class-diagrams/shape.md","tags":[{"inline":true,"label":"oo","permalink":"/java-docs/pr-preview/pr-308/tags/oo"},{"inline":true,"label":"inheritance","permalink":"/java-docs/pr-preview/pr-308/tags/inheritance"},{"inline":true,"label":"polymorphism","permalink":"/java-docs/pr-preview/pr-308/tags/polymorphism"},{"inline":true,"label":"io-streams","permalink":"/java-docs/pr-preview/pr-308/tags/io-streams"}],"version":"current","frontMatter":{"title":"Geometrische Form","description":"","tags":["oo","inheritance","polymorphism","io-streams"]},"sidebar":"examExercisesSidebar","previous":{"title":"Weihnachtsmann","permalink":"/java-docs/pr-preview/pr-308/exam-exercises/exam-exercises-java1/class-diagrams/santa-claus"},"next":{"title":"Kurs","permalink":"/java-docs/pr-preview/pr-308/exam-exercises/exam-exercises-java1/class-diagrams/student-course"}}'),r=s("85893"),a=s("50065");let l={title:"Geometrische Form",description:"",tags:["oo","inheritance","polymorphism","io-streams"]},d=void 0,c={},t=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweise zur Klasse <em>Shape</em>",id:"hinweise-zur-klasse-shape",level:2},{value:"Hinweise zur Klasse <em>Circle</em>",id:"hinweise-zur-klasse-circle",level:2},{value:"Hinweise zur Klasse <em>Rectangle</em>",id:"hinweise-zur-klasse-rectangle",level:2},{value:"Hinweise zur Klasse <em>ShapeReader</em>",id:"hinweise-zur-klasse-shapereader",level:2},{value:"Beispielhafter Aufbau der Formendatei",id:"beispielhafter-aufbau-der-formendatei",level:2}];function o(e){let n={code:"code",em:"em",h2:"h2",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle zum Testen eine\nausf\xfchrbare Klasse."}),"\n",(0,r.jsx)(n.h2,{id:"klassendiagramm",children:"Klassendiagramm"}),"\n",(0,r.jsx)(n.mermaid,{value:"classDiagram\n    ShapeReader o-- Shape\n    Shape <|-- Circle : extends\n    Shape <|-- Rectangle : extends\n    Rectangle <|-- Square : extends\n\n    class ShapeReader {\n        -shapes: List~Shape~ #123;final#125;\n        +ShapeReader(file: File)\n        +getCircles() List~Circle~\n        +getShapesWithMinArea(minAreaInCm2: double) List~Shape~\n    }\n\n    class Shape {\n        +getAreaInCm2(): double\n        +getCircumferenceInCm() double\n    }\n\n    class Circle {\n        -rInCm: double #123;final#125;\n        +Circle(rInCm: double)\n        +getAreaInCm2() double\n        +getCircumferenceInCm() double\n    }\n\n    class Rectangle {\n        -aInCm: double #123;final#125;\n        -bInCm: double #123;final#125;\n        +Rectangle(aInCm: double, bInCm: double)\n        +getAreaInCm2() double\n        +getCircumferenceInCm() double\n    }\n\n    class Square {\n        +Square(aInCm: double)\n    }"}),"\n",(0,r.jsx)(n.h2,{id:"allgemeine-hinweise",children:"Allgemeine Hinweise"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und\nObject-Methoden dargestellt"}),"\n",(0,r.jsx)(n.li,{children:"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die\nObject-Methoden wie gewohnt implementiert werden"}),"\n",(0,r.jsxs)(n.li,{children:["Die statische Konstante ",(0,r.jsx)(n.code,{children:"PI"})," der Klasse ",(0,r.jsx)(n.code,{children:"Math"})," stellt die Kreiszahl Pi dar"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"hinweise-zur-klasse-shape",children:["Hinweise zur Klasse ",(0,r.jsx)(n.em,{children:"Shape"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"double getAreaInCm2()"})," soll den Wert ",(0,r.jsx)(n.em,{children:"0"})," zur\xfcckgeben"]}),"\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"double getCircumferenceInCm()"})," soll den Wert ",(0,r.jsx)(n.em,{children:"0"})," zur\xfcckgeben"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"hinweise-zur-klasse-circle",children:["Hinweise zur Klasse ",(0,r.jsx)(n.em,{children:"Circle"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"double getAreaInCm2()"})," soll den Fl\xe4cheninhalt gem\xe4\xdf der Formel\n",(0,r.jsx)(n.code,{children:"\uD835\uDC34 = \uD835\uDF0B \u2217 \uD835\uDC5F \u2217 \uD835\uDC5F"})," berechnen und zur\xfcckgeben"]}),"\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"double getCircumferenceInCm()"})," soll den Umfang gem\xe4\xdf der Formel\n",(0,r.jsx)(n.code,{children:"U = 2 \u2217 \uD835\uDF0B \u2217 \uD835\uDC5F"})," berechnen und zur\xfcckgeben"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"hinweise-zur-klasse-rectangle",children:["Hinweise zur Klasse ",(0,r.jsx)(n.em,{children:"Rectangle"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"double getAreaInCm2()"})," soll den Fl\xe4cheninhalt gem\xe4\xdf der Formel\n",(0,r.jsx)(n.code,{children:"\uD835\uDC34 = \uD835\uDC4E \u2217 \uD835\uDC4F"})," berechnen und zur\xfcckgeben"]}),"\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"double getCircumferenceInCm()"})," soll den Umfang gem\xe4\xdf der Formel\n",(0,r.jsx)(n.code,{children:"U = 2 \u2217 \uD835\uDC4E + 2 \u2217 \uD835\uDC4F"})," berechnen und zur\xfcckgeben"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"hinweise-zur-klasse-shapereader",children:["Hinweise zur Klasse ",(0,r.jsx)(n.em,{children:"ShapeReader"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Der Konstruktor soll der Formenliste (",(0,r.jsx)(n.code,{children:"shapes"}),") alle Formen der eingehenden\nDatei hinzuf\xfcgen"]}),"\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"List<Circle> getCircles()"})," soll alle Kreise der Formenliste\n(",(0,r.jsx)(n.code,{children:"shapes"}),") zur\xfcckgeben"]}),"\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"List<Shape> getShapesWithMinArea(minAreaInCm2: double)"})," soll alle\nFormen der Formenliste (",(0,r.jsx)(n.code,{children:"shapes"}),") zur\xfcckgeben, die mindestens den eingehenden\nFl\xe4cheninhalt aufweisen"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"beispielhafter-aufbau-der-formendatei",children:"Beispielhafter Aufbau der Formendatei"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Circle;4\nSquare;5\nRectangle;3;4\nRectangle;1;7\nCircle;2\nCircle;3\n"})})]})}function m(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},50065:function(e,n,s){s.d(n,{Z:function(){return d},a:function(){return l}});var i=s(67294);let r={},a=i.createContext(r);function l(e){let n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);