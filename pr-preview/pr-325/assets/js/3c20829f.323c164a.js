"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([["1553"],{12941:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>l,toc:()=>o,default:()=>h,metadata:()=>s,assets:()=>u,contentTitle:()=>d});var s=JSON.parse('{"id":"exercises/lambdas/lambdas02","title":"Lambdas02","description":"","source":"@site/docs/exercises/lambdas/lambdas02.mdx","sourceDirName":"exercises/lambdas","slug":"/exercises/lambdas/lambdas02","permalink":"/java-docs/pr-preview/pr-325/exercises/lambdas/lambdas02","draft":false,"unlisted":false,"editUrl":"https://github.com/jappuccini/java-docs/tree/main/docs/exercises/lambdas/lambdas02.mdx","tags":[],"version":"current","frontMatter":{"title":"Lambdas02","description":""},"sidebar":"exercisesSidebar","previous":{"title":"Lambdas01","permalink":"/java-docs/pr-preview/pr-325/exercises/lambdas/lambdas01"},"next":{"title":"Lambdas03","permalink":"/java-docs/pr-preview/pr-325/exercises/lambdas/lambdas03"}}'),r=t(74848),i=t(84429),a=t(69714);let l={title:"Lambdas02",description:""},d,u={},o=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweise zur Klasse <em>FilteredStudents</em>",id:"hinweise-zur-klasse-filteredstudents",level:2}];function c(e){let n={code:"code",em:"em",h2:"h2",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Gegeben sind die beiden Klassen ",(0,r.jsx)(n.code,{children:"FilteredAdultStudents"})," und\n",(0,r.jsx)(n.code,{children:"FilteredTeenStudents"}),". Beide sollen sicherstellen, dass nur bestimmte Studenten\nhinzugef\xfcgt werden k\xf6nnen. Die Klasse ",(0,r.jsx)(n.code,{children:"FilteredAdultStudents"})," erm\xf6glicht nur das\nHinzuf\xfcgen von Studenten, die mindesten 18 Jahre alt sind; die Klasse\n",(0,r.jsx)(n.code,{children:"FilteredTeenStudents"})," das Hinzuf\xfcgen von Studenten unter 18 Jahren. Dieser\nAnsatz funktioniert zwar, ist allerdings nicht flexibel."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Erstelle eine ausf\xfchrbare Klasse, welche mehrere Objekte der Klasse ",(0,r.jsx)(n.code,{children:"Student"}),"\nerzeugt und versucht, diese Objekten der Klasse ",(0,r.jsx)(n.code,{children:"FilteredAdultList"})," bzw.\n",(0,r.jsx)(n.code,{children:"FilteredTeenList"})," hinzuzuf\xfcgen"]}),"\n",(0,r.jsxs)(n.li,{children:["Erstelle die Klasse ",(0,r.jsx)(n.code,{children:"FilteredStudents"})," anhand des abgebildeten\nKlassendiagramms"]}),"\n",(0,r.jsxs)(n.li,{children:["Passe die ausf\xfchrbare Klasse so an, dass nur noch die Klasse\n",(0,r.jsx)(n.code,{children:"FilteredStudents"})," verwendet wird und \xfcbergib dem Konstruktor das Pr\xe4dikat\njeweils in Form eines Lambda-Ausdrucks"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"klassendiagramm",children:"Klassendiagramm"}),"\n",(0,r.jsx)(n.mermaid,{value:"classDiagram\n    Student --o FilteredAdultStudents\n    Student --o FilteredTeenStudents\n    FilteredStudents o-- Student\n    FilteredStudents o-- Predicate~T~\n\n    class Student {\n        <<record>>\n        name: String\n        age: int\n    }\n\n    class Predicate~T~ {\n        <<interface>>\n        +test(t: T) boolean\n    }\n\n    class FilteredAdultStudents {\n        -students: List~Student~ #123;final#125;\n        +FilteredAdultStudents()\n        +add(student: Student) void\n        +printStudents() void\n    }\n\n    class FilteredTeenStudents {\n        -students: List~Student~ #123;final#125;\n        +FilteredTeenStudents()\n        +add(student: Student) void\n        +printStudents() void\n    }\n\n    class FilteredStudents {\n        -students: List~Student~ #123;final#125;\n        -mandatoryFilter: Predicate~Student~ #123;final#125;\n        +FilteredStudents(mandatoryFilter: Predicate~Student~)\n        +add(student: Student) void\n        +printStudents() void\n    }"}),"\n",(0,r.jsxs)(n.h2,{id:"hinweise-zur-klasse-filteredstudents",children:["Hinweise zur Klasse ",(0,r.jsx)(n.em,{children:"FilteredStudents"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Der Konstruktor soll alle Attribute initialisieren"}),"\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"void add(student: Student)"})," soll der Studentenliste den\neingehenden Studenten hinzuf\xfcgen. Vor dem Hinzuf\xfcgen soll mit Hilfe des\nFilters \xfcberpr\xfcft werden, ob der eingehende Student hinzugef\xfcgt werden soll"]}),"\n",(0,r.jsxs)(n.li,{children:["Methode ",(0,r.jsx)(n.code,{children:"void printStudent()"})," soll alle Studenten auf der Konsole ausgeben"]}),"\n"]}),"\n",(0,r.jsx)(a.A,{pullRequest:"68",branchSuffix:"lambdas/02"})]})}function h(e={}){let{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},93703:function(e,n,t){t.d(n,{A:()=>i});var s=t(74848);t(96540);var r=t(39836);function i({children:e,hidden:n,className:t}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)("tabItem_Ymn6",t),hidden:n,children:e})}},84109:function(e,n,t){t.d(n,{A:()=>g});var s=t(74848),r=t(96540),i=t(39836),a=t(16364),l=t(68251),d=t(56347),u=t(28004),o=t(25580),c=t(12213),h=t(75734);function m(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}var b=t(98864);function f({className:e,block:n,selectedValue:t,selectValue:r,tabValues:a}){let d=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.a_)(),o=e=>{let n=e.currentTarget,s=a[d.indexOf(n)].value;s!==t&&(u(n),r(s))},c=e=>{let n=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{let t=d.indexOf(e.currentTarget)+1;n=d[t]??d[0];break}case"ArrowLeft":{let t=d.indexOf(e.currentTarget)-1;n=d[t]??d[d.length-1]}}n?.focus()};return(0,s.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:a.map(({value:e,label:n,attributes:r})=>(0,s.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{d.push(e)},onKeyDown:c,onClick:o,...r,className:(0,i.A)("tabs__item","tabItem_LNqP",r?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function v({lazy:e,children:n,selectedValue:t}){let a=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=a.find(e=>e.props.value===t);return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,s.jsx)("div",{className:"margin-top--md",children:a.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function x(e){let n=function(e){let n,{defaultValue:t,queryString:s=!1,groupId:i}=e,a=function(e){let{values:n,children:t}=e;return(0,r.useMemo)(()=>{let e=n??m(t).map(({props:{value:e,label:n,attributes:t,default:s}})=>({value:e,label:n,attributes:t,default:s})),s=(0,c.XI)(e,(e,n)=>e.value===n.value);if(s.length>0)throw Error(`Docusaurus error: Duplicate values "${s.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,t])}(e),[l,b]=(0,r.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let t=n.find(e=>e.default)??n[0];if(!t)throw Error("Unexpected error: 0 tabValues");return t.value})({defaultValue:t,tabValues:a})),[f,v]=function({queryString:e=!1,groupId:n}){let t=(0,d.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o.aZ)(s),(0,r.useCallback)(e=>{if(!s)return;let n=new URLSearchParams(t.location.search);n.set(s,e),t.replace({...t.location,search:n.toString()})},[s,t])]}({queryString:s,groupId:i}),[x,g]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[t,s]=(0,h.Dv)(n);return[t,(0,r.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:i}),j=p({value:n=f??x,tabValues:a})?n:null;return(0,u.A)(()=>{j&&b(j)},[j]),{selectedValue:l,selectValue:(0,r.useCallback)(e=>{if(!p({value:e,tabValues:a}))throw Error(`Can't select invalid tab value=${e}`);b(e),v(e),g(e)},[v,g,a]),tabValues:a}}(e);return(0,s.jsxs)("div",{className:(0,i.A)(a.G.tabs.container,"tabs-container","tabList__CuJ"),children:[(0,s.jsx)(f,{...n,...e}),(0,s.jsx)(v,{...n,...e})]})}function g(e){let n=(0,b.A)();return(0,s.jsx)(x,{...e,children:m(e.children)},String(n))}},69714:function(e,n,t){t.d(n,{A:()=>d});var s=t(74848);t(96540);var r=t(84109),i=t(93703),a=t(12801),l=t(60464);function d({pullRequest:e,branchSuffix:n}){return(0,s.jsxs)(r.A,{children:[(0,s.jsxs)(i.A,{value:"exercise",label:"Exercise",default:!0,children:[(0,s.jsx)(l.A,{language:"console",children:`git switch exercises/${n}`}),(0,s.jsx)(a.A,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/exercises/${n}/Exercise.java`,children:(0,s.jsx)("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"})})]}),(0,s.jsxs)(i.A,{value:"solution",label:"Solution",children:[(0,s.jsx)(l.A,{language:"console",children:`git switch solutions/${n}`}),(0,s.jsx)(a.A,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/solutions/${n}/Exercise.java`,children:(0,s.jsx)("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"})})]}),(0,s.jsxs)(i.A,{value:"pullrequest",label:"Pull Request",children:["Alle \xa0\xc4nderungen zwischen der Aufgabe und der L\xf6sung findest du im Pull Request"," ",(0,s.jsxs)(a.A,{to:`https://github.com/jappuccini/java-exercises/pull/${e}/files?diff=split`,children:["PR#",e]})]})]})}}}]);