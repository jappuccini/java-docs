"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([["273"],{48551:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>d,toc:()=>c,default:()=>b,metadata:()=>r,assets:()=>u,contentTitle:()=>l});var r=JSON.parse('{"id":"documentation/mockito","title":"Mockito","description":"","source":"@site/docs/documentation/mockito.mdx","sourceDirName":"documentation","slug":"/documentation/mockito","permalink":"/java-docs/pr-preview/pr-325/documentation/mockito","draft":false,"unlisted":false,"editUrl":"https://github.com/jappuccini/java-docs/tree/main/docs/documentation/mockito.mdx","tags":[{"inline":true,"label":"mockito","permalink":"/java-docs/pr-preview/pr-325/tags/mockito"}],"version":"current","sidebarPosition":325,"frontMatter":{"title":"Mockito","description":"","sidebar_position":325,"tags":["mockito"]},"sidebar":"documentationSidebar","previous":{"title":"Komponententests (Unit Tests)","permalink":"/java-docs/pr-preview/pr-325/documentation/unit-tests"},"next":{"title":"Datenstr\xf6me (IO-Streams)","permalink":"/java-docs/pr-preview/pr-325/documentation/io-streams"}}'),i=t(74848),s=t(84429),a=t(84109),o=t(93703);let d={title:"Mockito",description:"",sidebar_position:325,tags:["mockito"]},l,u={},c=[{value:"Arten von Mock-Objekten",id:"arten-von-mock-objekten",level:2},{value:"Simulieren von Objekten",id:"simulieren-von-objekten",level:2},{value:"Umh\xfcllen von Objekten",id:"umh\xfcllen-von-objekten",level:2},{value:"Pr\xfcfen von Methodenaufrufen",id:"pr\xfcfen-von-methodenaufrufen",level:2},{value:"Argument Matcher",id:"argument-matcher",level:2},{value:"Beispiel",id:"beispiel",level:2}];function h(e){let n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://site.mockito.org/",children:"Mockito"})," ist ein leistungsf\xe4higes und einfach zu\nverwendendes Framework f\xfcr das Erstellen von Mock-Objekten in Java. Mock-Objekte\nsimulieren das Verhalten realer Komponenten und werden oft in Tests anstelle der\nrealen Komponenten verwendet. Durch den Einsatz von Mock-Objekten werden die\nAbh\xe4ngigkeiten des SUT (System under Test) minimiert und so das Testen von\nAnwendungen erheblich vereinfacht. Man spricht in diesem Zusammenhang auch von\nder sogenannten Test-Isolierung. Gr\xfcnde f\xfcr den Einsatz von Mock-Objekten k\xf6nnen\nkomplexe Abh\xe4ngigkeiten, ungew\xfcnschte Seiteneffekte oder hohe Laufzeiten der\nrealen Komponenten sein."]}),"\n",(0,i.jsx)(n.h2,{id:"arten-von-mock-objekten",children:"Arten von Mock-Objekten"}),"\n",(0,i.jsx)(n.p,{children:"Man unterscheidet zwischen verschiedenen Arten von Mock-Objekten."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ein ",(0,i.jsx)(n.em,{children:"Stub"})," ist ein Objekt, welches beim Aufruf einer Methode unabh\xe4ngig der\nEingabe immer den selben festgelegten Wert zur\xfcckgibt"]}),"\n",(0,i.jsxs)(n.li,{children:["Ein ",(0,i.jsx)(n.em,{children:"Mock"})," ist ein Objekt, welches im Gegensatz zum Stub beim Aufruf einer\nMethode abh\xe4ngig von der Eingabe festgelegte Werte zur\xfcckgibt"]}),"\n",(0,i.jsxs)(n.li,{children:["Ein ",(0,i.jsx)(n.em,{children:"Spy"})," ist ein Objekt, welches Aufrufe und \xfcbergebene Werte protokolliert\nund abfragbar macht"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"simulieren-von-objekten",children:"Simulieren von Objekten"}),"\n",(0,i.jsxs)(n.p,{children:["Mockito stellt f\xfcr das Erzeugen von Mock-Objekten zum Einen die statische\nMethode ",(0,i.jsx)(n.code,{children:"T mock(reified: T...)"})," der Klasse ",(0,i.jsx)(n.code,{children:"Mockito"})," und zum Anderen die\nAnnotation ",(0,i.jsx)(n.code,{children:"@Mock"})," sowie die statische Methode\n",(0,i.jsx)(n.code,{children:"AutoCloseable openMocks(testClass: Object)"})," der Klasse ",(0,i.jsx)(n.code,{children:"MockitoAnnotations"})," zur\nVerf\xfcgung. In beiden F\xe4llen wird ein entsprechendes Objekt der angegebenen\nKlasse erstellt, allerdings ohne jegliche Methodenimplementierungen. Das\nVerhalten einzelner Methoden kann anschlie\xdfend \xfcber die statische Methode\n",(0,i.jsx)(n.code,{children:"OngoingStubbing<T> when(methodCall: T)"})," der Klasse ",(0,i.jsx)(n.code,{children:"Mockito"})," sowie \xfcber die\nMethode ",(0,i.jsx)(n.code,{children:"OngoingStubbing<T> thenReturn(value: T)"})," bzw.\n",(0,i.jsx)(n.code,{children:"OngoingStubbing<T> thenThrow(throwables: Throwable...)"})," der Klasse\n",(0,i.jsx)(n.code,{children:"OngoingStubbing<T>"})," festgelegt werden."]}),"\n",(0,i.jsx)(n.h2,{id:"umh\xfcllen-von-objekten",children:"Umh\xfcllen von Objekten"}),"\n",(0,i.jsxs)(n.p,{children:["F\xfcr das Erzeugen von Spy-Objekten stellt Mockito zum Einen die statische Methode\n",(0,i.jsx)(n.code,{children:"T spy(object: T)"})," der Klasse ",(0,i.jsx)(n.code,{children:"Mockito"})," und zum Anderen die Annotation ",(0,i.jsx)(n.code,{children:"@Spy"}),"\nsowie die statische Methode ",(0,i.jsx)(n.code,{children:"AutoCloseable openMocks(testClass: Object)"})," der\nKlasse ",(0,i.jsx)(n.code,{children:"MockitoAnnotations"})," zur Verf\xfcgung. Durch das so umh\xfcllte Objekt kann das\nVerhalten einzelner Methoden anschlie\xdfend \xfcber die statische Methode\n",(0,i.jsx)(n.code,{children:"Stubber doReturn(toBeReturned: Object)"})," bzw.\n",(0,i.jsx)(n.code,{children:"Stubber doThrow(toBeThrown: Throwable...)"})," der Klasse ",(0,i.jsx)(n.code,{children:"Mockito"})," sowie \xfcber die\nMethode ",(0,i.jsx)(n.code,{children:"T when(mock: T)"})," der Klasse ",(0,i.jsx)(n.code,{children:"Stubber"})," \xfcberschrieben werden."]}),"\n",(0,i.jsx)(n.h2,{id:"pr\xfcfen-von-methodenaufrufen",children:"Pr\xfcfen von Methodenaufrufen"}),"\n",(0,i.jsxs)(n.p,{children:["F\xfcr das Pr\xfcfen, ob, wie oft und in welcher Reihenfolge eine Methode eines\nMock-Objektes aufgerufen wurde, stellt Mockito die statische Methode\n",(0,i.jsx)(n.code,{children:"T verify(mock: T, mode: VerificationMode)"})," der Klasse ",(0,i.jsx)(n.code,{children:"Mockito"})," zur Verf\xfcgung.\nZur Angabe des Pr\xfcfungsmodus k\xf6nnen die statischen Methoden\n",(0,i.jsx)(n.code,{children:"VerificationMode times(wantedNumberOfInvocations: int)"}),",\n",(0,i.jsx)(n.code,{children:"VerificationMode atLeast(minNumberOfInvocations: int)"}),",\n",(0,i.jsx)(n.code,{children:"VerificationMode atMost(maxNumberOfInvocations: int)"})," und\n",(0,i.jsx)(n.code,{children:"VerificationMode never()"})," der Klasse ",(0,i.jsx)(n.code,{children:"Mockito"})," verwendet werden."]}),"\n",(0,i.jsx)(n.h2,{id:"argument-matcher",children:"Argument Matcher"}),"\n",(0,i.jsxs)(n.p,{children:["Die Klasse ",(0,i.jsx)(n.code,{children:"ArgumentMatchers"})," stellt eine Reihe statischer Methoden wie z.B.\n",(0,i.jsx)(n.code,{children:"String anyString()"})," und ",(0,i.jsx)(n.code,{children:"List<T> anyList()"})," zur Verf\xfcgung, die ein flexibles\nSimulieren von Objekten und Pr\xfcfen von Methodenaufrufen erm\xf6glichen."]}),"\n",(0,i.jsx)(n.h2,{id:"beispiel",children:"Beispiel"}),"\n",(0,i.jsxs)(a.A,{children:[(0,i.jsx)(o.A,{value:"a",label:"Zu testende Klasse",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:'title="StudentClass.java" showLineNumbers',children:"@Data\npublic class StudentClass {\n\n   private List<Student> students;\n\n   public void addStudent(Student student) {\n      students.add(student);\n   }\n\n   public Optional<Student> getStudentWithBestAverageGrade() {\n      Student studentWithBestAverageGrade = null;\n      double bestAverageGrade = Double.MAX_VALUE;\n      for (Student s : students) {\n         if (s.getAverageGrade() < bestAverageGrade) {\n            studentWithBestAverageGrade = s;\n            bestAverageGrade = s.getAverageGrade();\n         }\n      }\n      return Optional.ofNullable(studentWithBestAverageGrade);\n   }\n\n}\n"})})}),(0,i.jsx)(o.A,{value:"b",label:"Zu simulierende Klasse",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:'title="Student.java" showLineNumbers',children:"@Data\npublic class Student {\n\n   private final int id;\n   private final String name;\n   private final List<Double> grades;\n\n   public void addGrade(double grade) {\n      grades.add(grade);\n   }\n\n   public double getAverageGrade() {\n      double total = 0;\n      for (double grade : grades) {\n         total += grade;\n      }\n      return total / grades.size();\n   }\n\n}\n"})})}),(0,i.jsx)(o.A,{value:"c",label:"Testklasse",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:'title="StudentClassTest.java" showLineNumbers',children:'public class StudentClassTest {\n\n   @Mock\n   private Student studentMock;\n   private Student studentSpy;\n   private StudentClass studentClass;\n\n   @BeforeEach\n   void setUp() {\n      MockitoAnnotations.openMocks(this);\n\n      studentSpy = spy(new Student(1, "Hans Maier", new ArrayList<>()));\n\n      studentClass = new StudentClass(new ArrayList<>());\n      studentClass.addStudent(studentMock);\n      studentClass.addStudent(studentSpy);\n   }\n\n   @Test\n   void testGetStudentWithBestAverageGrade() {\n      when(studentMock.getAverageGrade()).thenReturn(2.2);\n      doReturn(1.5).when(studentSpy).getAverageGrade();\n\n      assertEquals(Optional.of(studentSpy), studentClass.getStudentWithBestAverageGrade());\n\n      verify(studentMock, atLeast(1)).getAverageGrade();\n      verify(studentSpy, atLeast(1)).getAverageGrade();\n   }\n\n}\n'})})})]})]})}function b(e={}){let{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},93703:function(e,n,t){t.d(n,{A:()=>s});var r=t(74848);t(96540);var i=t(39836);function s({children:e,hidden:n,className:t}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)("tabItem_Ymn6",t),hidden:n,children:e})}},84109:function(e,n,t){t.d(n,{A:()=>j});var r=t(74848),i=t(96540),s=t(39836),a=t(16364),o=t(68251),d=t(56347),l=t(28004),u=t(25580),c=t(12213),h=t(75734);function b(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function m({value:e,tabValues:n}){return n.some(n=>n.value===e)}var v=t(98864);function f({className:e,block:n,selectedValue:t,selectValue:i,tabValues:a}){let d=[],{blockElementScrollPositionUntilNextRender:l}=(0,o.a_)(),u=e=>{let n=e.currentTarget,r=a[d.indexOf(n)].value;r!==t&&(l(n),i(r))},c=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let t=d.indexOf(e.currentTarget)+1;n=d[t]??d[0];break}case"ArrowLeft":{let t=d.indexOf(e.currentTarget)-1;n=d[t]??d[d.length-1]}}n?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},e),children:a.map(({value:e,label:n,attributes:i})=>(0,r.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{d.push(e)},onKeyDown:c,onClick:u,...i,className:(0,s.A)("tabs__item","tabItem_LNqP",i?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function p({lazy:e,children:n,selectedValue:t}){let a=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=a.find(e=>e.props.value===t);return e?(0,i.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:a.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function g(e){let n=function(e){let n,{defaultValue:t,queryString:r=!1,groupId:s}=e,a=function(e){let{values:n,children:t}=e;return(0,i.useMemo)(()=>{let e=n??b(t).map(({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r})),r=(0,c.XI)(e,(e,n)=>e.value===n.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,t])}(e),[o,v]=(0,i.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let t=n.find(e=>e.default)??n[0];if(!t)throw Error("Unexpected error: 0 tabValues");return t.value})({defaultValue:t,tabValues:a})),[f,p]=function({queryString:e=!1,groupId:n}){let t=(0,d.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,u.aZ)(r),(0,i.useCallback)(e=>{if(!r)return;let n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})},[r,t])]}({queryString:r,groupId:s}),[g,j]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[t,r]=(0,h.Dv)(n);return[t,(0,i.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:s}),k=m({value:n=f??g,tabValues:a})?n:null;return(0,l.A)(()=>{k&&v(k)},[k]),{selectedValue:o,selectValue:(0,i.useCallback)(e=>{if(!m({value:e,tabValues:a}))throw Error(`Can't select invalid tab value=${e}`);v(e),p(e),j(e)},[p,j,a]),tabValues:a}}(e);return(0,r.jsxs)("div",{className:(0,s.A)(a.G.tabs.container,"tabs-container","tabList__CuJ"),children:[(0,r.jsx)(f,{...n,...e}),(0,r.jsx)(p,{...n,...e})]})}function j(e){let n=(0,v.A)();return(0,r.jsx)(g,{...e,children:b(e.children)},String(n))}},84429:function(e,n,t){t.d(n,{R:()=>a,x:()=>o});var r=t(96540);let i={},s=r.createContext(i);function a(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);