"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([["9603"],{20202:function(e,n,i){i.r(n),i.d(n,{default:()=>m,frontMatter:()=>t,metadata:()=>a,assets:()=>o,toc:()=>c,contentTitle:()=>l});var a=JSON.parse('{"id":"exam-exercises/exam-exercises-java1/class-diagrams/travel","title":"Reise","description":"","source":"@site/docs/exam-exercises/exam-exercises-java1/class-diagrams/travel.md","sourceDirName":"exam-exercises/exam-exercises-java1/class-diagrams","slug":"/exam-exercises/exam-exercises-java1/class-diagrams/travel","permalink":"/java-docs/pr-preview/pr-307/exam-exercises/exam-exercises-java1/class-diagrams/travel","draft":false,"unlisted":false,"editUrl":"https://github.com/jappuccini/java-docs/tree/main/docs/exam-exercises/exam-exercises-java1/class-diagrams/travel.md","tags":[{"inline":true,"label":"oo","permalink":"/java-docs/pr-preview/pr-307/tags/oo"},{"inline":true,"label":"inheritance","permalink":"/java-docs/pr-preview/pr-307/tags/inheritance"},{"inline":true,"label":"polymorphism","permalink":"/java-docs/pr-preview/pr-307/tags/polymorphism"},{"inline":true,"label":"abstract","permalink":"/java-docs/pr-preview/pr-307/tags/abstract"},{"inline":true,"label":"interfaces","permalink":"/java-docs/pr-preview/pr-307/tags/interfaces"}],"version":"current","frontMatter":{"title":"Reise","description":"","tags":["oo","inheritance","polymorphism","abstract","interfaces"]},"sidebar":"examExercisesSidebar","previous":{"title":"Kurs","permalink":"/java-docs/pr-preview/pr-307/exam-exercises/exam-exercises-java1/class-diagrams/student-course"},"next":{"title":"Wetterstation","permalink":"/java-docs/pr-preview/pr-307/exam-exercises/exam-exercises-java1/class-diagrams/weather-station"}}'),s=i("85893"),r=i("50065");let t={title:"Reise",description:"",tags:["oo","inheritance","polymorphism","abstract","interfaces"]},l=void 0,o={},c=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweis zur Klasse <em>AbstractBooking</em>",id:"hinweis-zur-klasse-abstractbooking",level:2},{value:"Hinweise zur Klasse <em>Travel</em>",id:"hinweise-zur-klasse-travel",level:2}];function d(e){let n={code:"code",em:"em",h2:"h2",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle zum Testen eine\nausf\xfchrbare Klasse."}),"\n",(0,s.jsx)(n.h2,{id:"klassendiagramm",children:"Klassendiagramm"}),"\n",(0,s.jsx)(n.mermaid,{value:"classDiagram\n   AbstractBooking <|-- Flight : extends\n   AbstractBooking <|-- Accommodation : extends\n   Booking <|.. AbstractBooking : implements\n   Travel o-- Booking\n   class Booking {\n      <<interface>>\n      +getPriceInEuro() double\n      +getBookingDate() LocalDate\n   }\n   class AbstractBooking {\n      <<abstract>>\n      -priceInEuro: double #123;final#125;\n      -bookingDate: LocalDate #123;final#125;\n      +AbstractBooking(priceInEuro: double)\n   }\n   class Flight {\n      -flightId: String #123;final#125;\n      -flightDate: LocalDate #123;final#125;\n      +Flight(flightId: String, flightDate: LocalDate, priceInEuro: double)\n   }\n   class Accommodation {\n      -name: String #123;final#125;\n      -city: String #123;final#125;\n      +Accommodation(name: String, city: String, priceInEuro: double)\n   }\n   class Travel {\n      -description: String #123;final#125;\n      -start: LocalDate #123;final#125;\n      -end: LocalDate #123;final#125;\n      -bookings: List~Booking~ #123;final#125;\n      +Travel(description: String, start: LocalDate, end: LocalDate)\n      +addBooking(booking: Booking) boolean\n      +getTotalTravelCostsInEuro() double\n   }"}),"\n",(0,s.jsx)(n.h2,{id:"allgemeine-hinweise",children:"Allgemeine Hinweise"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und\nObject-Methoden dargestellt"}),"\n",(0,s.jsx)(n.li,{children:"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die\nObject-Methoden wie gewohnt implementiert werden"}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"hinweis-zur-klasse-abstractbooking",children:["Hinweis zur Klasse ",(0,s.jsx)(n.em,{children:"AbstractBooking"})]}),"\n",(0,s.jsx)(n.p,{children:"Der Konstruktor soll den Preis mit dem eingehenden Wert initialisieren und das\nBuchungsdatum auf das aktuelle Datum setzen."}),"\n",(0,s.jsxs)(n.h2,{id:"hinweise-zur-klasse-travel",children:["Hinweise zur Klasse ",(0,s.jsx)(n.em,{children:"Travel"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Die Methode ",(0,s.jsx)(n.code,{children:"void booking: Booking)"})," soll den Buchungen die eingehende Buchung\nhinzuf\xfcgen"]}),"\n",(0,s.jsxs)(n.li,{children:["Die Methode ",(0,s.jsx)(n.code,{children:"double getTotalTravelCostsInEuro()"})," soll die Gesamtkosten aller\nBuchungen der Reise in Euro zur\xfcckgeben"]}),"\n",(0,s.jsxs)(n.li,{children:["Die Methode ",(0,s.jsx)(n.code,{children:"List<Flight> getFlights()"})," soll alle Fl\xfcge der Reise zur\xfcckgeben"]}),"\n"]})]})}function m(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return l},a:function(){return t}});var a=i(67294);let s={},r=a.createContext(s);function t(e){let n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);