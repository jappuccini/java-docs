"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([["982"],{88126:function(e,s,n){n.d(s,{A:()=>l});var i=n(74848),r=n(96540);function l({children:e,initSlides:s,width:n=null,height:l=null}){return(0,r.useEffect)(()=>{s()}),(0,i.jsx)("div",{className:"reveal reveal-viewport",style:{width:n??"100vw",height:l??"100vh"},children:(0,i.jsx)("div",{className:"slides",children:e})})}},34732:function(e,s,n){n.d(s,{i:()=>i});let i=()=>{let e=n(38182),s=n(72186),i=n(13504),r=n(93558);new(n(89665))({plugins:[e,s,i,r]}).initialize({hash:!0})}},99527:function(e,s,n){n.d(s,{C:()=>r});var i=n(74848);n(96540);let r=()=>(0,i.jsx)("p",{style:{fontSize:"8px",position:"absolute",bottom:0,right:0},children:"*NKR"})},51971:function(e,s,n){n.r(s),n.d(s,{default:()=>t});var i=n(74848),r=n(12801),l=n(88126),a=n(34732),c=n(99527);function t(){return(0,i.jsxs)(l.A,{initSlides:a.i,children:[(0,i.jsx)("section",{children:(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"Agenda"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"Wiederholung"}),(0,i.jsx)("li",{className:"fragment",children:"Interface"}),(0,i.jsx)("li",{className:"fragment",children:"Komparator"}),(0,i.jsx)("li",{className:"fragment",children:"Zusammenfassung"})]})]})}),(0,i.jsxs)("section",{children:[(0,i.jsx)("section",{children:(0,i.jsx)("h2",{children:"Wiederholung"})}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"abstract Modifier"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"abstrakte Klassen"}),(0,i.jsx)("li",{className:"fragment",children:"abstrakte Methoden"})]})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"final Modifier"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"finale Klassen"}),(0,i.jsx)("li",{className:"fragment",children:"finale Methoden"})]})]})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("section",{children:(0,i.jsx)("h2",{children:"Interfaces"})}),(0,i.jsx)("section",{children:(0,i.jsx)("p",{children:"Wie kann man Dogs und Cats in einer Liste speichern?"})}),(0,i.jsx)("section",{children:(0,i.jsx)("p",{children:"Wie kann man Baby, Child und Adult in einer Liste speichern?"})}),(0,i.jsx)("section",{children:(0,i.jsx)("p",{children:"Wie kann man Dogs, Cats, Baby, Child und Adult in einer Liste speichern?"})}),(0,i.jsxs)("section",{children:[(0,i.jsx)("p",{children:"Limitierungen von abstrakten Klassen"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"komplexe Vererbungshierarchie"}),(0,i.jsx)("li",{className:"fragment",children:"keine Mehrfachvererbung"})]})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"Interfaces"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"definieren Methoden"}),(0,i.jsx)("li",{className:"fragment",children:"werden von Klassen implementiert"})]})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"Zweck von Interfaces"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"Unabh\xe4ngig von Vererbung"}),(0,i.jsx)("li",{className:"fragment",children:"Verstecken von Implementierungsdetails"}),(0,i.jsx)("li",{className:"fragment",children:"Schnittstelle zwischen Ersteller und Verwender"})]})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"Ersteller des Warenkorbs"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"Beschreibung anzeigen"}),(0,i.jsx)("li",{className:"fragment",children:"Einzelpreis ermitteln"})]})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"Realisierung des Warenkorbs"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"Warenkorb Modul definiert Interface"}),(0,i.jsx)("li",{className:"fragment",children:"Artikel implementieren das Interface"})]})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:(0,i.jsx)(r.A,{to:"https://github.com/jappuccini/java-demos/tree/steffen/java1/interfaces",children:"Demo - Interface"})}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"ShoppingCart (description & price)"}),(0,i.jsx)("li",{className:"fragment",children:"Dog und Cat implementieren Interface"}),(0,i.jsx)("li",{className:"fragment",children:"ShoppingCart Example"}),(0,i.jsx)("li",{className:"fragment",children:"ToDo Liste (done, title)"}),(0,i.jsx)("li",{className:"fragment",children:"Dog und Cat implementieren Interface"}),(0,i.jsx)("li",{className:"fragment",children:"ToDo Liste Example"})]})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"weitere Anwendungsgebiete*"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"Dependency Injection"}),(0,i.jsx)("li",{className:"fragment",children:"Unit Tests"})]}),(0,i.jsx)("div",{children:(0,i.jsx)(c.C,{})})]})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("section",{children:(0,i.jsx)("h2",{children:"Komparatoren"})}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"Zweck von Komparatoren"}),(0,i.jsx)("p",{children:"Sortieren von Listen"})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"Funktionsweise"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"Vergleichen von zwei Objekten"}),(0,i.jsx)("li",{className:"fragment",children:"erstes Element davor einordnen: -1"}),(0,i.jsx)("li",{className:"fragment",children:"erstes Element dahinter einordnen: 1"}),(0,i.jsx)("li",{className:"fragment",children:"erstes Element gleich einordnen: 0"})]})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"Welche Interfaces gibt es?"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"Comparable"}),(0,i.jsx)("li",{className:"fragment",children:"Comparator"})]})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"Comparable"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"definiert die Standardsortierung"}),(0,i.jsx)("li",{className:"fragment",children:"Implementierung in der Datenklasse"}),(0,i.jsx)("li",{className:"fragment",children:"Bsp. Human nach Alter sortieren"})]})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"Comparator"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"definiert eine Sortierung"}),(0,i.jsx)("li",{className:"fragment",children:"Implementierung in eigener Klasse"}),(0,i.jsx)("li",{className:"fragment",children:"Bsp. AgeComparator, NameComparator"})]})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"Wie sortiert man eine Liste?"}),(0,i.jsx)("pre",{className:"fragment",children:(0,i.jsx)("code",{className:"java","data-line-numbers":"2|3|4",dangerouslySetInnerHTML:{__html:"// ...\nArrayList&lt;Human&gt; humans = new ArrayList&lt;&gt;();\nCollections.sort(humans);\nCollections.sort(humans, new AgeComparator());\n// ..."}})})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:(0,i.jsx)(r.A,{to:"https://github.com/jappuccini/java-demos/tree/steffen/java1/comparator",children:"Demo - Komparatoren"})}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"Human Comparable (name)"}),(0,i.jsx)("li",{className:"fragment",children:"AgeComparator (age)"})]})]})]}),(0,i.jsxs)("section",{children:[(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"Zusammenfassung"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:"Interfaces"}),(0,i.jsx)("li",{className:"fragment",children:"Komparatoren"})]})]}),(0,i.jsxs)("section",{children:[(0,i.jsx)("h2",{children:"Rest of the day"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{className:"fragment",children:(0,i.jsx)(r.A,{to:"/exercises/interfaces",children:"Interfaces 01"})}),(0,i.jsx)("li",{className:"fragment",children:(0,i.jsx)(r.A,{to:"/exercises/comparators",children:"Comparators 01 - 02"})})]})]})]})]})}}}]);