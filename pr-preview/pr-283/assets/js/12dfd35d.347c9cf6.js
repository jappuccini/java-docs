"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([["2489"],{42709:function(e,s,n){n.d(s,{Z:function(){return l}});var a=n(85893),t=n(67294);function l(e){let{children:s,initSlides:n,width:l=null,height:i=null}=e;return(0,t.useEffect)(()=>{n()}),(0,a.jsx)("div",{className:"reveal reveal-viewport",style:{width:l??"100vw",height:i??"100vh"},children:(0,a.jsx)("div",{className:"slides",children:s})})}},91242:function(e,s,n){n.d(s,{O:function(){return a}});let a=()=>{let e=n(42199),s=n(87251),a=n(60977),t=n(12489);new(n(29197))({plugins:[e,s,a,t]}).initialize({hash:!0})}},24890:function(e,s,n){n.r(s),n.d(s,{default:function(){return r}});var a=n(85893),t=n(53367),l=n(42709),i=n(91242);function r(){return(0,a.jsxs)(l.Z,{initSlides:i.O,children:[(0,a.jsx)("section",{children:(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Agenda"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Set"}),(0,a.jsx)("li",{className:"fragment",children:"Map"}),(0,a.jsx)("li",{className:"fragment",children:"Hashes"}),(0,a.jsx)("li",{className:"fragment",children:"Records"})]})]})}),(0,a.jsxs)("section",{children:[(0,a.jsx)("section",{children:(0,a.jsx)("h2",{children:"Set"})}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Konzept"}),(0,a.jsxs)("ul",{children:[(0,a.jsxs)("li",{className:"fragment",children:[(0,a.jsx)(t.Z,{to:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Set.html",children:"Set"})," ","ist ein Interface"]}),(0,a.jsx)("li",{className:"fragment",children:"Realisiert eine Menge"}),(0,a.jsx)("li",{className:"fragment",children:"Vereinigung (Union)"}),(0,a.jsx)("li",{className:"fragment",children:"Durchschnitt (Intersection)"}),(0,a.jsx)("li",{className:"fragment",children:"Differenz (Difference)"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsxs)("h2",{children:[(0,a.jsx)(t.Z,{to:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/HashSet.html",children:"HashSet"}),"- Klasse"]}),(0,a.jsx)("p",{className:"fragment",children:"implementiert das Set interface"}),(0,a.jsx)("p",{className:"fragment",children:"hat einen Typparameter"})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:(0,a.jsx)(t.Z,{to:"https://github.com/jappuccini/java-exercises/tree/demos/steffen/demo/java2/hashcollection/hashset",children:"Demo - HashSet"})}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Mengen erstellen (1-4) und (2,3,5)"}),(0,a.jsx)("li",{className:"fragment",children:"Vereinigung (Union)"}),(0,a.jsx)("li",{className:"fragment",children:"Durchschnitt (Intersection)"}),(0,a.jsx)("li",{className:"fragment",children:"Differenz (Difference)"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Methoden eines Sets"}),(0,a.jsx)("pre",{className:"fragment",children:(0,a.jsx)("code",{"data-line-numbers":"2-3|4-7|8|9-11",className:"java",dangerouslySetInnerHTML:{__html:"// ...\n  Set&lt;Integer&gt; numbers = new HashSet&lt;&gt;();\n  Set&lt;Integer&gt; otherNumbers = new HashSet&lt;&gt;();\n  numbers.add(4545); // add entry\n  numbers.remove(4545); // remove entry\n  numbers.clear(); // remove all entries\n  numbers.size(); // number of entries\n  students.contains(4545); // entry exists\n  students.addAll(otherNumbers); // union\n  students.retainAll(otherNumbers); // intersection\n  students.removeAll(otherNumbers); // difference\n// ...\n"}})})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("section",{children:(0,a.jsx)("h2",{children:"Map"})}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Konzept"}),(0,a.jsxs)("ul",{children:[(0,a.jsxs)("li",{className:"fragment",children:[(0,a.jsx)(t.Z,{to:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Map.html",children:"Map"})," ","ist ein Interface"]}),(0,a.jsx)("li",{className:"fragment",children:"Realisiert ein Schl\xfcssel-Wert-Paar"}),(0,a.jsx)("li",{className:"fragment",children:"Keine doppelten Schl\xfcssel m\xf6glich"}),(0,a.jsx)("li",{className:"fragment",children:"Existiert ein Schl\xfcssel oder Wert"}),(0,a.jsx)("li",{className:"fragment",children:"Alle Schl\xfcssel, Werte oder Schl\xfcssel-Wert-Paare"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Beispiele Schl\xfcssel-Wert-Paare"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Studentendaten \u2192 MatrikelNummer, Student"}),(0,a.jsx)("li",{className:"fragment",children:"Produktinventar \u2192 Produkt, Anzahl"}),(0,a.jsx)("li",{className:"fragment",children:"StadtInfos \u2192 Stadtname, CityInfo"}),(0,a.jsx)("li",{className:"fragment",children:"Hauptst\xe4dte \u2192 Land, Hauptstadt"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsxs)("h2",{children:[(0,a.jsx)(t.Z,{to:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/HashMap.html",children:"HashMap"}),"- Klasse"]}),(0,a.jsx)("p",{className:"fragment",children:"implementiert das Map interface"}),(0,a.jsx)("p",{className:"fragment",children:"hat zwei Typparameter"})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:(0,a.jsx)(t.Z,{to:"https://github.com/jappuccini/java-exercises/tree/demos/steffen/demo/java2/hashcollection/hashmap/studentgrades",children:"Demo - HashMap"})}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Map erstellen (Matrikelnummer/Note)"}),(0,a.jsx)("li",{className:"fragment",children:"Hinzuf\xfcgen und L\xf6schen von Noten"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Methoden einer Map"}),(0,a.jsx)("pre",{className:"fragment",children:(0,a.jsx)("code",{"data-line-numbers":"2-13|3|4-8|9-10|11-13",className:"java",dangerouslySetInnerHTML:{__html:'// ...\n  Student steffen = new Student("Steffen");\n  Map&lt;Integer, Student&gt; students = new HashMap&lt;&gt;();\n  students.put(4545, steffen); // add entry\n  students.get(4545); // get entry\n  students.remove(4545); // remove entry\n  students.clear(); // remove all entries\n  students.size(); // number of entries\n  students.containsKey(4545); // key exists\n  students.containsValue(steffen); // value exists\n  students.keySet(); // get all keys as Set\n  students.values(); // get all values as Collection\n  students.entrySet(); // get all entries as Set\n// ...\n'}})})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("section",{children:(0,a.jsx)("h2",{children:"Hashes"})}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:(0,a.jsx)(t.Z,{to:"https://github.com/jappuccini/java-exercises/tree/demos/steffen/demo/java2/hashcollection/hashmap/dogowners/bug",children:"Demo - Hashmap Dog Inventory"})}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"ein Hund und deren Besitzer"}),(0,a.jsx)("li",{className:"fragment",children:"Besitzer des Hundes \xe4ndern"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Was ist ein Hash(wert)?"}),(0,a.jsx)("ul",{children:(0,a.jsx)("li",{className:"fragment",children:"Ergebnis einer Hashfunktion"})})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Was ist eine Hashfunktion?"}),(0,a.jsx)("p",{children:"Eine Hashfunktion bildet aus einer gro\xdfen Menge von Daten eine geringere Menge von Daten ab."})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Eigenschaften einer Hashfunktion"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Einwegsfunktion"}),(0,a.jsx)("li",{className:"fragment",children:"Deterministisch"}),(0,a.jsx)("li",{className:"fragment",children:"Kollisionsbehaftet"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Was sind Hashkollisionen?"}),(0,a.jsx)("p",{className:"fragment",children:"Eine Hashkollision tritt auf, wenn zwei unterschiedliche Eingabedaten denselben Hashwert erzeugen."})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Beispiel Hashfunktion"}),(0,a.jsxs)("table",{children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:"Name"}),(0,a.jsx)("th",{children:"Summe"}),(0,a.jsx)("th",{children:"Hash"})]})}),(0,a.jsxs)("tbody",{children:[(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{className:"fragment",children:"Steffen"}),(0,a.jsx)("td",{"data-tooltip":"S:83 t:116 e:101 f:102 f:102 e:101 n:110",tabIndex:0,className:"fragment",children:"715"}),(0,a.jsx)("td",{"data-tooltip":"715 % 4",tabIndex:0,className:"fragment",children:"3"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{className:"fragment",children:"Mirco"}),(0,a.jsx)("td",{"data-tooltip":"M:77 i:105 r:114 c:99 o:111",tabIndex:0,className:"fragment",children:"506"}),(0,a.jsx)("td",{"data-tooltip":"506 % 4",tabIndex:0,className:"fragment",children:"2"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{className:"fragment",children:"Marianna"}),(0,a.jsx)("td",{"data-tooltip":"M:77 a:97 r:114 i:105 a:97 n:110 n:110 a:97",tabIndex:0,className:"fragment",children:"807"}),(0,a.jsx)("td",{"data-tooltip":"807 % 4",tabIndex:0,className:"fragment",children:"3"})]})]})]}),(0,a.jsxs)("p",{children:[(0,a.jsx)("span",{className:"fragment",children:"Einwegfunktion, "}),(0,a.jsx)("span",{className:"fragment",children:"Deterministisch, "}),(0,a.jsx)("span",{className:"fragment",children:"Kollisionsbehaftet"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Zusammenfassung Hash"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Reduktion auf einen Wert"}),(0,a.jsx)("li",{className:"fragment",children:"Kollisionen"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"funktionsweise der put-Methode einer HashMap"}),(0,a.jsxs)("ol",{children:[(0,a.jsx)("li",{className:"fragment",children:"Hashwert des Schl\xfcssels berechnen \u2192 Index"}),(0,a.jsx)("li",{className:"fragment",children:"falls kein Wert an diesem Index \u2192 Einf\xfcgen"}),(0,a.jsx)("li",{className:"fragment",children:"falls Wert an diesem Index \u2192 Werte vergleichen"}),(0,a.jsx)("li",{className:"fragment",children:"falls Werte gleich \u2192 Wert ersetzen"}),(0,a.jsxs)("li",{className:"fragment",children:["falls Werte ungleich \u2192"," ",(0,a.jsx)("span",{"data-tooltip":"Array vergr\xf6\xdfern, Schl\xfcssel neu berechnen, umsortieren",tabIndex:0,children:"Speicher vergr\xf6\xdfern"})]})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsxs)("h2",{children:["Die Klasse"," ",(0,a.jsx)(t.Z,{to:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Object.html",children:"Object"})]}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",tabIndex:0,children:"hashCode"}),(0,a.jsx)("li",{"data-tooltip":"Referenzvergleich",tabIndex:0,className:"fragment",children:"equals"}),(0,a.jsx)("li",{"data-tooltip":"Gibt die Speicheradresse aus",tabIndex:0,className:"fragment",children:"toString"})]}),(0,a.jsx)("p",{className:"fragment",children:"HashSet und HashMap verwenden die Methoden hashCode und equals"})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:(0,a.jsx)(t.Z,{to:"https://github.com/jappuccini/java-exercises/tree/demos/steffen/demo/java2/hashcollection/hashmap/dogowners/hashcodeandequals",children:"Demo - HashCode und Equals"})}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"hashCode \xfcberschreiben und loggen"}),(0,a.jsx)("li",{className:"fragment",children:"equals \xfcberschreiben und loggen"}),(0,a.jsx)("li",{className:"fragment",children:"alle F\xe4lle erzeugen"}),(0,a.jsx)("li",{className:"fragment",children:"hashCode implementieren"}),(0,a.jsx)("li",{className:"fragment",children:"equals implementieren"})]})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("section",{children:(0,a.jsx)("h2",{children:"Records"})}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Records"}),(0,a.jsx)("p",{className:"fragment",children:"Ein Record ist eine Datenklasse, deren Attribute nicht ver\xe4ndert werden k\xf6nnen."}),(0,a.jsx)("p",{className:"fragment",children:"Eine Datenklasse hat somit finale Attribute und Getter."})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Beispiel Datenklasse Dog I"}),(0,a.jsx)("pre",{className:"fragment",children:(0,a.jsx)("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Dog {\n final String name;\n final int age;\n\n public Dog(String name, int age) {\n  this.name = name;\n  this.age = age;\n }\n\n public String getName() {\n  return name;\n }\n// ...\n"}})})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Beispiel Datenklasse Dog II"}),(0,a.jsx)("pre",{className:"fragment",children:(0,a.jsx)("code",{className:"java",dangerouslySetInnerHTML:{__html:"// ...\n public int getAge() {\n  return age;\n }\n// weitere Methoden siehe Doku\n}\n"}})})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Beispiel Record Dog"}),(0,a.jsx)("pre",{className:"fragment",children:(0,a.jsx)("code",{className:"java",dangerouslySetInnerHTML:{__html:"public record Dog(String name, int age) {}\n"}})})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Record"}),(0,a.jsx)("p",{className:"fragment",children:"Da ein Record von der Record-Klasse erbt, kann nicht von einer anderen Klasse geerbt werden."}),(0,a.jsx)("p",{className:"fragment",children:"Ein Record kann jedoch weitere Methoden haben und beliebig viele Schnittstellen implementieren."})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Record - Gratis Methoden"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Konstruktor"}),(0,a.jsx)("li",{className:"fragment",children:"Getter"}),(0,a.jsx)("li",{className:"fragment",children:"Equals"}),(0,a.jsx)("li",{className:"fragment",children:"hashCode"}),(0,a.jsx)("li",{className:"fragment",children:"toString"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:(0,a.jsx)(t.Z,{to:"https://github.com/jappuccini/java-exercises/tree/demos/steffen/demo/java2/hashcollection/hashmap/dogowners/records",children:"Demo - Record vs Class"})}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Cat Klasse \u2192 Cat Record"}),(0,a.jsx)("li",{className:"fragment",children:"equals"}),(0,a.jsx)("li",{className:"fragment",children:"toString"}),(0,a.jsx)("li",{className:"fragment",children:"height - weiteres Attribut"}),(0,a.jsx)("li",{className:"fragment",children:"isOld - weitere Methode "}),(0,a.jsx)("li",{className:"fragment",children:"HashMap - Cat Inventory"})]})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Rest of the Day"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Generics"}),(0,a.jsx)("li",{className:"fragment",children:"Maps"}),(0,a.jsx)("li",{className:"fragment",children:"Records"})]})]})]})}}}]);