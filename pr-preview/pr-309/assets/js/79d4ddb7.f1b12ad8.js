"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([["5278"],{85400:function(e,r,a){a.r(r),a.d(r,{frontMatter:()=>l,toc:()=>o,default:()=>h,metadata:()=>n,assets:()=>c,contentTitle:()=>u});var n=JSON.parse('{"id":"exercises/class-diagrams/class-diagrams03","title":"ClassDiagrams03","description":"","source":"@site/docs/exercises/class-diagrams/class-diagrams03.mdx","sourceDirName":"exercises/class-diagrams","slug":"/exercises/class-diagrams/class-diagrams03","permalink":"/java-docs/pr-preview/pr-309/exercises/class-diagrams/class-diagrams03","draft":false,"unlisted":false,"editUrl":"https://github.com/jappuccini/java-docs/tree/main/docs/exercises/class-diagrams/class-diagrams03.mdx","tags":[],"version":"current","frontMatter":{"title":"ClassDiagrams03","description":""},"sidebar":"exercisesSidebar","previous":{"title":"ClassDiagrams02","permalink":"/java-docs/pr-preview/pr-309/exercises/class-diagrams/class-diagrams02"},"next":{"title":"ClassDiagrams04","permalink":"/java-docs/pr-preview/pr-309/exercises/class-diagrams/class-diagrams04"}}'),s=a(85893),i=a(50065),t=a(39661);let l={title:"ClassDiagrams03",description:""},u=void 0,c={},o=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweise zur Klasse <em>Creature</em>",id:"hinweise-zur-klasse-creature",level:2},{value:"Hinweise zur Klasse <em>CreatureGame</em>",id:"hinweise-zur-klasse-creaturegame",level:2},{value:"Konsolenausgabe",id:"konsolenausgabe",level:2}];function d(e){let r={a:"a",code:"code",em:"em",h2:"h2",li:"li",mermaid:"mermaid",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Passe die Klasse ",(0,s.jsx)(r.code,{children:"Creature"})," aus \xdcbungsaufgabe ",(0,s.jsx)(r.a,{href:"../oo/oo06",children:"OO06"})," anhand des\nabgebildeten Klassendiagramms an und Erstelle die Klasse ",(0,s.jsx)(r.code,{children:"CreatureGame"})]}),"\n",(0,s.jsx)(r.li,{children:"Erstelle eine ausf\xfchrbare Klasse, welche einen Kampf zwischen zwei Kreaturen\nsimuliert"}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"klassendiagramm",children:"Klassendiagramm"}),"\n",(0,s.jsx)(r.mermaid,{value:"classDiagram\n    CreatureGame o-- Creature\n\n    class CreatureGame {\n        -creature1: Creature #123;final#125;\n        -creature2: Creature #123;final#125;\n        -numberOfRounds: int\n        +CreatureGame(creature1: Creature, creature2: Creature)\n        +simulateFight() void\n        -move(creature1: Creature, creature2: Creature) boolean\n    }\n\n    class Creature {\n        -name: String #123;final#125;\n        -attackValue: int #123;final#125;\n        -hitpoints: int\n        +Creature(name: String, attackValue: int, hitpoints: int)\n        +attackCreature(creature: Creature) boolean\n        +getName() String\n        +getAttackValue() int\n        +getHitpoints() int\n        +setHitpoints(hitpoints: int) void\n        +toString() String\n    }"}),"\n",(0,s.jsxs)(r.h2,{id:"hinweise-zur-klasse-creature",children:["Hinweise zur Klasse ",(0,s.jsx)(r.em,{children:"Creature"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Passe die Methode ",(0,s.jsx)(r.code,{children:"boolean attack(creature: Creature)"})," so an, dass der\nR\xfcckgabewert ",(0,s.jsx)(r.code,{children:"true"})," ist, wenn die Lebenspunkte der angegriffenen Kreatur\nkleiner gleich Null sind, bzw. ",(0,s.jsx)(r.code,{children:"false"}),", wenn nicht"]}),"\n",(0,s.jsxs)(r.li,{children:["Die Methode ",(0,s.jsx)(r.code,{children:"String toString()"})," soll die Kreatur in der Form ",(0,s.jsx)(r.em,{children:"[Name]\n([Angriffswert] - [Lebenspunkte])"})," zur\xfcckgeben"]}),"\n"]}),"\n",(0,s.jsxs)(r.h2,{id:"hinweise-zur-klasse-creaturegame",children:["Hinweise zur Klasse ",(0,s.jsx)(r.em,{children:"CreatureGame"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Der Konstruktor soll alle Attribute initialisieren"}),"\n",(0,s.jsxs)(r.li,{children:["Die Methode ",(0,s.jsx)(r.code,{children:"void simulateFight()"}),' soll die beiden Kreaturen sich so lange\ngegenseitig angreifen lassen, bis eine der Kreaturen "stirbt"']}),"\n",(0,s.jsxs)(r.li,{children:["Die Methode ",(0,s.jsx)(r.code,{children:"boolean move(creature1: Creature, creature2: Creature)"})," soll eine\nKreatur die andere angreifen lassen und den R\xfcckgabewert ",(0,s.jsx)(r.code,{children:"true"}),' liefern, wenn\ndie angegriffene Kreatur "stirbt", bzw. ',(0,s.jsx)(r.code,{children:"false"}),", wenn nicht"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"konsolenausgabe",children:"Konsolenausgabe"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-console",children:"Runde 1: Zombie (2 - 10), Vampir (4 - 6)\nZombie greift Vampir an und erzielt 2 Schaden\nVampir hat noch 4 Lebenspunkte\nVampir greift Zombie an und erzielt 4 Schaden\nZombie hat noch 6 Lebenspunkte\n\u2026\nRunde 3: Zombie (2 - 2), Vampir (4 - 2)\nZombie greift Vampir an und erzielt 2 Schaden\nVampir wurde vernichtet\n"})}),"\n",(0,s.jsx)(t.Z,{pullRequest:"38",branchSuffix:"class-diagrams/03"})]})}function h(e={}){let{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},5525:function(e,r,a){a.d(r,{Z:()=>i});var n=a(85893);a(67294);var s=a(67026);function i({children:e,hidden:r,className:a}){return(0,n.jsx)("div",{role:"tabpanel",className:(0,s.Z)("tabItem_Ymn6",a),hidden:r,children:e})}},47902:function(e,r,a){a.d(r,{Z:()=>x});var n=a(85893),s=a(67294),i=a(67026),t=a(69599),l=a(16550),u=a(32e3),c=a(4520),o=a(38341),d=a(76009);function h(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){let{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function m({value:e,tabValues:r}){return r.some(r=>r.value===e)}var p=a(7227);function g({className:e,block:r,selectedValue:a,selectValue:s,tabValues:l}){let u=[],{blockElementScrollPositionUntilNextRender:c}=(0,t.o5)(),o=e=>{let r=e.currentTarget,n=l[u.indexOf(r)].value;n!==a&&(c(r),s(n))},d=e=>{let r=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{let a=u.indexOf(e.currentTarget)+1;r=u[a]??u[0];break}case"ArrowLeft":{let a=u.indexOf(e.currentTarget)-1;r=u[a]??u[u.length-1]}}r?.focus()};return(0,n.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},e),children:l.map(({value:e,label:r,attributes:s})=>(0,n.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{u.push(e)},onKeyDown:d,onClick:o,...s,className:(0,i.Z)("tabs__item","tabItem_LNqP",s?.className,{"tabs__item--active":a===e}),children:r??e},e))})}function f({lazy:e,children:r,selectedValue:a}){let t=(Array.isArray(r)?r:[r]).filter(Boolean);if(e){let e=t.find(e=>e.props.value===a);return e?(0,s.cloneElement)(e,{className:(0,i.Z)("margin-top--md",e.props.className)}):null}return(0,n.jsx)("div",{className:"margin-top--md",children:t.map((e,r)=>(0,s.cloneElement)(e,{key:r,hidden:e.props.value!==a}))})}function b(e){let r=function(e){let{defaultValue:r,queryString:a=!1,groupId:n}=e,i=function(e){let{values:r,children:a}=e;return(0,s.useMemo)(()=>{let e=r??h(a).map(({props:{value:e,label:r,attributes:a,default:n}})=>({value:e,label:r,attributes:a,default:n})),n=(0,o.lx)(e,(e,r)=>e.value===r.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[r,a])}(e),[t,p]=(0,s.useState)(()=>(function({defaultValue:e,tabValues:r}){if(0===r.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:r}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${r.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let a=r.find(e=>e.default)??r[0];if(!a)throw Error("Unexpected error: 0 tabValues");return a.value})({defaultValue:r,tabValues:i})),[g,f]=function({queryString:e=!1,groupId:r}){let a=(0,l.k6)(),n=function({queryString:e=!1,groupId:r}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!r)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:e,groupId:r});return[(0,c._X)(n),(0,s.useCallback)(e=>{if(!n)return;let r=new URLSearchParams(a.location.search);r.set(n,e),a.replace({...a.location,search:r.toString()})},[n,a])]}({queryString:a,groupId:n}),[b,x]=function({groupId:e}){let r=e?`docusaurus.tab.${e}`:null,[a,n]=(0,d.Nk)(r);return[a,(0,s.useCallback)(e=>{r&&n.set(e)},[r,n])]}({groupId:n}),v=(()=>{let e=g??b;return m({value:e,tabValues:i})?e:null})();return(0,u.Z)(()=>{v&&p(v)},[v]),{selectedValue:t,selectValue:(0,s.useCallback)(e=>{if(!m({value:e,tabValues:i}))throw Error(`Can't select invalid tab value=${e}`);p(e),f(e),x(e)},[f,x,i]),tabValues:i}}(e);return(0,n.jsxs)("div",{className:(0,i.Z)("tabs-container","tabList__CuJ"),children:[(0,n.jsx)(g,{...r,...e}),(0,n.jsx)(f,{...r,...e})]})}function x(e){let r=(0,p.Z)();return(0,n.jsx)(b,{...e,children:h(e.children)},String(r))}},39661:function(e,r,a){a.d(r,{Z:()=>u});var n=a(85893);a(67294);var s=a(47902),i=a(5525),t=a(83012),l=a(62834);function u({pullRequest:e,branchSuffix:r}){return(0,n.jsxs)(s.Z,{children:[(0,n.jsxs)(i.Z,{value:"exercise",label:"Exercise",default:!0,children:[(0,n.jsx)(l.Z,{language:"console",children:`git switch exercises/${r}`}),(0,n.jsx)(t.Z,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/exercises/${r}/Exercise.java`,children:(0,n.jsx)("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"})})]}),(0,n.jsxs)(i.Z,{value:"solution",label:"Solution",children:[(0,n.jsx)(l.Z,{language:"console",children:`git switch solutions/${r}`}),(0,n.jsx)(t.Z,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/solutions/${r}/Exercise.java`,children:(0,n.jsx)("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"})})]}),(0,n.jsxs)(i.Z,{value:"pullrequest",label:"Pull Request",children:["Alle \xa0\xc4nderungen zwischen der Aufgabe und der L\xf6sung findest du im Pull Request"," ",(0,n.jsxs)(t.Z,{to:`https://github.com/jappuccini/java-exercises/pull/${e}/files?diff=split`,children:["PR#",e]})]})]})}}}]);